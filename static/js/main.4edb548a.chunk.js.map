{"version":3,"sources":["services/user.service.js","actions/UserAction.js","services/bitcoin.service.js","actions/BitcoinAction.js","assets/imgs/bitcoin-gif.gif","cmps/MovesList.js","pages/HomePage.js","services/contact.service.js","actions/ContactAction.js","cmps/ContactFilter.js","cmps/ContactPreview.js","cmps/ContactList.js","pages/ContactPage.js","cmps/TransferFund.js","pages/ContactDetails.js","cmps/Chart.js","pages/StatisticPage.js","pages/ContactEditPage.js","pages/SignUp.js","cmps/NavBar.js","cmps/MainHeader.js","App.js","reportWebVitals.js","store/reducers/AppReducer.js","store/reducers/ContactReducer.js","store/reducers/UserReducer.js","store/reducers/BitcoinReducer.js","store/index.js","index.js"],"names":["USERS","loggedInUser","JSON","parse","localStorage","getItem","usersInStorage","setItem","stringify","getUser","credentials","userFound","find","user","name","password","_login","a","newUser","_createUser","push","contact","amount","coins","move","date","Date","to","_id","moves","unshift","userIdx","findIndex","currUser","splice","removeItem","logOut","signUp","addMove","_makeId","length","txt","possible","i","charAt","Math","floor","random","loadUser","userCredentials","dispatch","UserService","console","log","type","RATE_URL","MARKET_PRICE_URL","TRADS_URL","rate","axios","get","statistics","req","valuesToShow","data","values","map","value","x","y","period","description","unit","getRate","getStatisticsValues","BitcoinService","props","className","icon","faCalendarCheck","moment","format","faUser","mapDispatchToProps","connect","state","bitcoin","useState","userName","setUserName","setPassword","useDispatch","useEffect","login","ev","preventDefault","onLogOut","history","src","alt","onClick","faCoins","faExchangeAlt","faChartLine","MovesList","onSubmit","placeholder","onChange","target","bitcoinGif","contacts","sort","arr","b","toLocaleLowerCase","filter","term","includes","phone","email","getContacts","filterBy","Promise","resolve","reject","contactsToReturn","getContactById","id","deleteContact","index","saveContact","c","_updateContact","_addContact","getEmptyContact","loadCotnacts","ContactService","loadCotnact","ContactFilter","setTerm","onFilter","onChangeHandler","ContactPreview","currContact","ContactList","setFilterBy","termToFilterBy","onFilterHandler","faPlus","TransferFund","setAmount","tranfer","onTransferCoins","min","max","required","clearContact","match","params","deleteClickHandler","go","title","faUndo","faEdit","faTrashAlt","faEnvelope","faPhone","Chart","dataToChart","max-width","height","chartType","options","chart","subtitle","colors","hAxis","vAxis","rootProps","StatisticPage","marketPrice","setMarketPrice","confirmedTransactions","setConfirmedTransactions","getMarketPrive","getConfirmedTransactions","ContactEditPage","componentDidMount","setState","handleChange","prevState","this","PureComponent","isUpdate","setName","onSignUp","activeClassName","exact","MainHeader","NavBar","library","add","fab","createBrowserHistory","path","component","HomePage","ContactPage","ContactDetails","SignUpPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","msg","counter","store","createStore","combineReducers","action","app","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4edb548a.chunk.js","sourcesContent":["const USERS =\r\n    [{\r\n        \"_id\": \"5a5664024c096d04eeb13a8a\",\r\n        \"name\": \"Ochoa Hyde\",\r\n        \"password\": '1234',\r\n        \"coins\": 100,\r\n        \"moves\": []\r\n    },\r\n    {\r\n        \"_id\": \"5a3664028c093d08eeb13a8a\",\r\n        \"name\": \"rotem\",\r\n        \"password\": '1234',\r\n        \"coins\": 200,\r\n        \"moves\": []\r\n    }]\r\n\r\nconst loggedInUser = JSON.parse(localStorage.getItem('logged user'));\r\n// const loggedInUser = null;\r\n\r\nconst usersInStorage = ((localStorage.getItem('users'))) ? JSON.parse(localStorage.getItem('users')) : _setUsers()\r\n\r\nfunction getUser(credentials) {\r\n\r\n    return (credentials) ? _login(credentials) : (loggedInUser ? loggedInUser : null)\r\n}\r\nasync function signUp(user) {\r\n    const newUser = _createUser(user);\r\n    usersInStorage.push(newUser);\r\n    localStorage.setItem('users', JSON.stringify(usersInStorage));\r\n    localStorage.setItem('logged user', JSON.stringify(newUser));\r\n    return getUser();\r\n}\r\nasync function addMove(contact, amount) {\r\n    if (loggedInUser.coins >= amount) {\r\n        loggedInUser.coins -= amount;\r\n        let move = {\r\n            date: new Date(),\r\n            amount: amount,\r\n            to: contact._id\r\n        }\r\n        if (loggedInUser.moves) {\r\n            loggedInUser.moves.unshift(move)\r\n        } else {\r\n            loggedInUser.moves = [move]\r\n        }\r\n        const userIdx = usersInStorage.findIndex(currUser => currUser.name === loggedInUser.name)\r\n        usersInStorage.splice(userIdx, 1, loggedInUser)\r\n        localStorage.setItem('users', JSON.stringify(usersInStorage));\r\n        localStorage.setItem('logged user', JSON.stringify(loggedInUser));\r\n    }\r\n    return getUser();\r\n}\r\nasync function logOut() {\r\n    if (!loggedInUser) return\r\n    const user = ''\r\n    await localStorage.removeItem('logged user');\r\n    // localStorage.setItem('logged user', JSON.stringify(user))\r\n    // console.log(\"loggedInUserin logout:\", loggedInUser)\r\n    return user\r\n}\r\nexport default {\r\n    getUser,\r\n    logOut,\r\n    signUp,\r\n    addMove\r\n}\r\nfunction _login(credentials) {\r\n    const userFound = usersInStorage.find(user => {\r\n        return (user.name === credentials.name && user.password === credentials.password)\r\n    })\r\n    if (userFound) localStorage.setItem('logged user', JSON.stringify(userFound));\r\n    // console.log(\"loggedInUser in service:\".loggedInUser)//undifine\r\n    return JSON.parse(localStorage.getItem('logged user'));\r\n}\r\nfunction _setUsers() {\r\n    localStorage.setItem('users', JSON.stringify(USERS))\r\n    return JSON.parse(localStorage.getItem('users'))\r\n}\r\n\r\nfunction _createUser(user) {\r\n    return {\r\n        \"_id\": _makeId(),\r\n        \"name\": user.name,\r\n        \"password\": user.password,\r\n        \"coins\": 100,\r\n        \"moves:\": []\r\n    }\r\n}\r\nfunction _makeId(length = 10) {\r\n    let txt = ''\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (let i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\n","import UserService from '../services/user.service'\r\n\r\nexport function loadUser(userCredentials) {\r\n    if (userCredentials) {\r\n        return async dispatch => {\r\n            const loggedInUser = await UserService.getUser(userCredentials);\r\n            console.log(\"loggedInUser in action:\", loggedInUser)\r\n            dispatch({ type: 'SET_USER', loggedInUser })\r\n        }\r\n    } else {\r\n        return async dispatch => {\r\n            const loggedInUser = await UserService.getUser();\r\n            console.log(\"no cred action:\", loggedInUser)\r\n            dispatch({ type: 'SET_USER', loggedInUser })\r\n        }\r\n\r\n    }\r\n}\r\nexport function logOut() {\r\n    return async dispatch => {\r\n        await UserService.logOut();\r\n        dispatch({ type: 'SET_USER', loggedInUser: null })\r\n    }\r\n}\r\nexport function signUp(newUser) {\r\n    return async dispatch => {\r\n        const loggedInUser = await UserService.signUp(newUser);\r\n        dispatch({ type: 'SET_USER', loggedInUser })\r\n    }\r\n}\r\nexport function addMove(contact, amount) {\r\n    return async dispatch => {\r\n        const loggedInUser = await UserService.addMove(contact, amount);\r\n        const moves = loggedInUser.moves\r\n        dispatch({ type: 'SET_USER_MOVES', moves })\r\n    }\r\n}\r\n","import axios from 'axios';\r\n// import moment from 'moment';\r\n\r\nconst RATE_URL = 'https://blockchain.info/tobtc?currency=USD&value=1';\r\nconst MARKET_PRICE_URL = 'https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true';\r\nconst TRADS_URL = 'https://api.blockchain.info/charts/trade-volume?timespan=5months&format=json&cors=true&values';\r\n\r\n\r\nasync function getRate() {\r\n    let rate;\r\n    if (localStorage.getItem('rate')) {\r\n        rate = localStorage.getItem('rate');\r\n        rate = JSON.parse(rate);\r\n    } else {\r\n        rate = await axios.get(RATE_URL);\r\n        localStorage.setItem('rate', JSON.stringify(rate));\r\n    }\r\n    return rate\r\n\r\n}\r\n\r\nasync function getStatisticsValues(type) {\r\n    let statistics;\r\n    if (localStorage.getItem(type)) {\r\n        statistics = localStorage.getItem(type);\r\n        statistics = JSON.parse(statistics);\r\n    } else {\r\n        const req = await axios.get((type === 'Market Price') ? MARKET_PRICE_URL : TRADS_URL);\r\n        const valuesToShow = req.data.values.map(value => [new Date(value.x), value.y])\r\n        valuesToShow.unshift([req.data.period, req.data.name])\r\n        statistics = {\r\n            name: req.data.name,\r\n            description: req.data.description,\r\n            period: req.data.period,\r\n            unit: req.data.unit,\r\n            values: valuesToShow\r\n            // values: marketPriceValues.data.values.map(value => [moment(value.x * 1000).format('MMM Do YYYY'), value.y])\r\n        }\r\n        localStorage.setItem(type, JSON.stringify(statistics));\r\n    }\r\n\r\n    return statistics\r\n}\r\n\r\nexport default {\r\n    getRate,\r\n    getStatisticsValues\r\n}\r\n\r\n\r\n\r\n","import BitcoinService from '../services/bitcoin.service'\r\n\r\nexport function getRate() {\r\n    return async dispatch => {\r\n        const rate = await BitcoinService.getRate();\r\n        dispatch({ type: 'SET_RATE', rate })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/bitcoin-gif.40cb03d6.gif\";","\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarCheck, faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const { moves } = props;\r\n    console.log(\"render hp?\", moves)\r\n\r\n    return (\r\n        <div className=\"moves-list\">\r\n            {moves.length ? (<h3 className=\"card-on-feed\">Moves</h3>) : (<h3 className=\"card-on-feed\">No moves yet</h3>)}\r\n            <ul className=\"moves-list-ul\">\r\n                {moves.map(move => (\r\n                    <li key={move.date} className=\"move card-on-feed\">\r\n                        <p><span><FontAwesomeIcon icon={faCalendarCheck} /></span> {moment(move.date).format('MMMM Do YYYY, h:mm:ss a')}</p>\r\n                        <p><span><FontAwesomeIcon icon={['fab', 'bitcoin']} /></span>{move.amount} coins</p>\r\n                        <p><span><FontAwesomeIcon icon={faUser} /></span>mister x</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoins, faExchangeAlt, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { loadUser, logOut } from '../actions/UserAction';\r\nimport { getRate } from '../actions/BitcoinAction';\r\n\r\nimport bitcoinGif from '../assets/imgs/bitcoin-gif.gif'\r\nimport MovesList from '../cmps/MovesList'\r\n\r\nconst HomePage = (props) => {\r\n    const { loggedInUser, rate } = props;\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n    }, [loggedInUser, rate])\r\n\r\n    const login = async (ev) => {\r\n        ev.preventDefault();\r\n        const userCredentials = {\r\n            name: userName,\r\n            password: password\r\n        }\r\n        dispatch(loadUser(userCredentials));\r\n        dispatch(getRate())\r\n    }\r\n\r\n    const onLogOut = async (ev) => {\r\n        ev.preventDefault();\r\n        setUserName('');\r\n        setPassword('');\r\n        dispatch(logOut());\r\n        props.history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-page page\">\r\n            {(loggedInUser && rate) ? (\r\n                <div className=\"user-logged-in\">\r\n                    <section className=\"user-section\">\r\n                        <div className=\"user-img-main-wrapper card-on-feed\">\r\n                            <img className=\"home-user-img\" src={`https://robohash.org/${loggedInUser.name}.png`} alt=\"\" />\r\n                            <h1>{loggedInUser.name}</h1>\r\n                            <button onClick={(ev) => onLogOut(ev)} className=\"log-out-btn\">Log out</button>\r\n                        </div>\r\n                        <section className=\"info-section card-on-feed\">\r\n                            <p><span><FontAwesomeIcon icon={faCoins} /></span>{loggedInUser.coins} coins</p>\r\n                            <p><span><FontAwesomeIcon icon={faExchangeAlt} /></span>number of moves: {(loggedInUser.moves) ? loggedInUser.moves.length : 0}</p>\r\n                            <p><span><FontAwesomeIcon icon={faChartLine} /></span>rate is: {rate.data}</p>\r\n                        </section>\r\n                    </section>\r\n                    {loggedInUser.moves && <MovesList moves={loggedInUser.moves} />}\r\n                </div>\r\n            ) :\r\n                (<section className=\"sign-in-sec\">\r\n                    <h2>Log in:</h2>\r\n                    <form onSubmit={(ev) => login(ev)}>\r\n                        <label>Name: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Eter your name\"\r\n                            name=\"userName\"\r\n                            value={userName}\r\n                            onChange={(ev) => setUserName(ev.target.value)}\r\n                        />\r\n                        <label>Password: </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={(ev) => setPassword(ev.target.value)}\r\n                        />\r\n                        <button type=\"submit\">Go</button>\r\n                    </form>\r\n                    <h2>New arround?\r\n                        <span className=\"sign-up\">\r\n                            <Link to={'/SignUp'}>  Sign up now</Link>\r\n                        </span>\r\n                    </h2>\r\n                    <img className=\"bitcoin-gif\" src={bitcoinGif} alt=\"bitcoin gif\" />\r\n                </section>)\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    // console.count('calls to state in HomePage')\r\n    return {\r\n        loggedInUser: state.user.loggedInUser,\r\n        rate: state.bitcoin.rate\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUser,\r\n    logOut,\r\n    getRate\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)\r\n\r\n","const contacts = [\r\n  {\r\n    \"_id\": \"5a56640269f443a5d64b32ca\",\r\n    \"name\": \"Ochoa Hyde\",\r\n    \"email\": \"ochoahyde@renovize.com\",\r\n    \"phone\": \"+1 (968) 593-3824\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n    \"name\": \"Hallie Mclean\",\r\n    \"email\": \"halliemclean@renovize.com\",\r\n    \"phone\": \"+1 (948) 464-2888\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640252d6acddd183d319\",\r\n    \"name\": \"Parsons Norris\",\r\n    \"email\": \"parsonsnorris@renovize.com\",\r\n    \"phone\": \"+1 (958) 502-3495\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n    \"name\": \"Rachel Lowe\",\r\n    \"email\": \"rachellowe@renovize.com\",\r\n    \"phone\": \"+1 (911) 475-2312\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abce24c6bfe4699d\",\r\n    \"name\": \"Dominique Soto\",\r\n    \"email\": \"dominiquesoto@renovize.com\",\r\n    \"phone\": \"+1 (807) 551-3258\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402a6499c1d4da9220a\",\r\n    \"name\": \"Shana Pope\",\r\n    \"email\": \"shanapope@renovize.com\",\r\n    \"phone\": \"+1 (970) 527-3082\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402f90ae30e97f990db\",\r\n    \"name\": \"Faulkner Flores\",\r\n    \"email\": \"faulknerflores@renovize.com\",\r\n    \"phone\": \"+1 (952) 501-2678\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n    \"name\": \"Holder Bean\",\r\n    \"email\": \"holderbean@renovize.com\",\r\n    \"phone\": \"+1 (989) 503-2663\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402e3b846c5f6aec652\",\r\n    \"name\": \"Rosanne Shelton\",\r\n    \"email\": \"rosanneshelton@renovize.com\",\r\n    \"phone\": \"+1 (968) 454-3851\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n    \"name\": \"Pamela Nolan\",\r\n    \"email\": \"pamelanolan@renovize.com\",\r\n    \"phone\": \"+1 (986) 545-2166\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n    \"name\": \"Roy Cantu\",\r\n    \"email\": \"roycantu@renovize.com\",\r\n    \"phone\": \"+1 (929) 571-2295\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n    \"name\": \"Ollie Christian\",\r\n    \"email\": \"olliechristian@renovize.com\",\r\n    \"phone\": \"+1 (977) 419-3550\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n    \"name\": \"Nguyen Walls\",\r\n    \"email\": \"nguyenwalls@renovize.com\",\r\n    \"phone\": \"+1 (963) 471-3181\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298ab77236845b82b\",\r\n\r\n    \"name\": \"Glenna Santana\",\r\n    \"email\": \"glennasantana@renovize.com\",\r\n    \"phone\": \"+1 (860) 467-2376\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640208fba3e8ecb97305\",\r\n    \"name\": \"Malone Clark\",\r\n    \"email\": \"maloneclark@renovize.com\",\r\n    \"phone\": \"+1 (818) 565-2557\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abb3146207bc4ec5\",\r\n    \"name\": \"Floyd Rutledge\",\r\n    \"email\": \"floydrutledge@renovize.com\",\r\n    \"phone\": \"+1 (807) 597-3629\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298500fead8cb1ee5\",\r\n    \"name\": \"Grace James\",\r\n    \"email\": \"gracejames@renovize.com\",\r\n    \"phone\": \"+1 (959) 525-2529\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640243427b8f8445231e\",\r\n    \"name\": \"Tanner Gates\",\r\n    \"email\": \"tannergates@renovize.com\",\r\n    \"phone\": \"+1 (978) 591-2291\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n    \"name\": \"Lilly Conner\",\r\n    \"email\": \"lillyconner@renovize.com\",\r\n    \"phone\": \"+1 (842) 587-3812\"\r\n  }\r\n];\r\n\r\n\r\nfunction sort(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  })\r\n}\r\n\r\nfunction getContacts(filterBy = null) {\r\n  return new Promise((resolve, reject) => {\r\n    let contactsToReturn = contacts;\r\n    if (filterBy && filterBy.term) {\r\n      contactsToReturn = filter(filterBy.term)\r\n    }\r\n    resolve(sort(contactsToReturn))\r\n  })\r\n}\r\n\r\nfunction getContactById(id) {\r\n  return new Promise((resolve, reject) => {\r\n    const contact = contacts.find(contact => contact._id === id)\r\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n    // console.log('service:', contact)\r\n  })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n  return new Promise((resolve, reject) => {\r\n    const index = contacts.findIndex(contact => contact._id === id)\r\n    if (index !== -1) {\r\n      contacts.splice(index, 1)\r\n    }\r\n\r\n    resolve(contacts)\r\n  })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n  return new Promise((resolve, reject) => {\r\n    const index = contacts.findIndex(c => contact._id === c._id)\r\n    if (index !== -1) {\r\n      contacts[index] = contact\r\n    }\r\n    resolve(contact)\r\n  })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n  return new Promise((resolve, reject) => {\r\n    contact._id = _makeId()\r\n    contacts.push(contact)\r\n    resolve(contact)\r\n  })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n  // console.log(contact)\r\n  return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n  return {\r\n    _id: _makeId(),\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  }\r\n}\r\n\r\nfunction filter(term) {\r\n  term = term.toLocaleLowerCase()\r\n  return contacts.filter(contact => {\r\n    return contact.name.toLocaleLowerCase().includes(term) ||\r\n      contact.phone.toLocaleLowerCase().includes(term) ||\r\n      contact.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\nexport default {\r\n  getContacts,\r\n  getContactById,\r\n  deleteContact,\r\n  saveContact,\r\n  getEmptyContact\r\n}\r\n\r\nfunction _makeId(length = 10) {\r\n  let txt = ''\r\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (let i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return txt\r\n}\r\n\r\n","import ContactService from '../services/contact.service'\r\n\r\nexport function loadCotnacts(filterBy) {\r\n    return async dispatch => {\r\n        const contacts = await ContactService.getContacts(filterBy);\r\n        dispatch({ type: 'SET_CONTACTS', contacts })\r\n    }\r\n}\r\n\r\nexport function loadCotnact(id) {\r\n    return async dispatch => {\r\n        const contact = await ContactService.getContactById(id);\r\n        dispatch({ type: 'SET_CONTACT', contact })\r\n    }\r\n}\r\n\r\nexport function saveContact(currContact) {\r\n    return async dispatch => {\r\n        let isUpdate = false;\r\n        (currContact._id) ? isUpdate = true : isUpdate = false;\r\n        const contact = await ContactService.saveContact(currContact);\r\n        if (isUpdate) {\r\n            dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        } else {\r\n            dispatch({ type: 'ADD_CONTACT', contact })\r\n        }\r\n        return contact;\r\n    }\r\n}\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        const contact = await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', contact })\r\n    }\r\n}\r\n\r\nexport function clearContact() {\r\n    return async dispatch => {\r\n        dispatch({ type: 'SET_CONTACT', contact: null })\r\n    }\r\n}","import React, { useState } from 'react';\r\n\r\nconst ContactFilter = (props) => {\r\n  const [term, setTerm] = useState('');\r\n\r\n  const onChangeHandler = (ev) => {\r\n    setTerm(ev.target.value);\r\n    props.onFilter(term);\r\n  };\r\n\r\n  return (\r\n    <form className=\"contact-filter\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search contact by name...\"\r\n        onChange={(ev) => onChangeHandler(ev)}\r\n        name=\"term\"\r\n        value={term}\r\n      />\r\n\r\n    </form>\r\n  );\r\n\r\n}\r\nexport default ContactFilter;","import React from 'react'\r\n\r\nconst ContactPreview = (props) => {\r\n    const { currContact } = props\r\n    return (\r\n        <div className=\"contact-preview\">\r\n            <img className=\"contact-img\" src={`https://robohash.org/${currContact.name}`} alt=\"\" />\r\n            <h3 className=\"contact-name\">{currContact.name}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactPreview\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ContactPreview from './ContactPreview'\r\n\r\n\r\nconst ContactList = (props) => {\r\n    const { contacts } = props\r\n    return (\r\n        <ul className=\"contact-list\">\r\n            {contacts.map((contact, index) => (\r\n                <li key={index} className=\"contact\">\r\n                    <Link to={'/Contact/' + contact._id}>\r\n                        <ContactPreview currContact={contact}></ContactPreview>\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactList","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nimport { loadCotnacts } from '../actions/ContactAction';\r\n\r\nimport ContactFilter from '../cmps/ContactFilter'\r\nimport ContactList from '../cmps/ContactList'\r\n\r\nconst ContactPage = (props) => {\r\n    const { contacts, loggedInUser } = props;\r\n    const [filterBy, setFilterBy] = useState({ term: '' })\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        getContacts();\r\n        if (!loggedInUser) dispatch(loadCotnacts());\r\n    }, [filterBy.term])\r\n\r\n    const getContacts = () => {\r\n        dispatch(loadCotnacts(filterBy))\r\n    }\r\n    const onFilterHandler = (termToFilterBy) => {\r\n        setFilterBy(termToFilterBy)\r\n        getContacts();\r\n    }\r\n\r\n\r\n    if (!contacts) {\r\n        return <h3>no contacts yet...</h3>\r\n    }\r\n    return (\r\n        <div className=\"contact-page page\">\r\n            <ContactFilter filterBy={filterBy} onFilter={(termToFilterBy) => onFilterHandler(termToFilterBy)} />\r\n            <ContactList contacts={contacts} />\r\n            <button className=\"add-contact-btn button\">\r\n                <Link to={'/Contact/Edit'}>\r\n                    Add Contact<span><FontAwesomeIcon icon={faPlus} /></span>\r\n                </Link>\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser,\r\n        contacts: state.contact.contacts\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCotnacts\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage)\r\n\r\n","import React, { useState } from 'react';\r\n\r\nconst TransferFund = (props) => {\r\n    const { contact, loggedInUser } = props;\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const tranfer = async (ev) => {\r\n        ev.preventDefault();\r\n        props.onTransferCoins(amount);\r\n        setAmount(0);\r\n    }\r\n\r\n    if (!contact && !loggedInUser) {\r\n        return <h3>no contact yet...</h3>\r\n    }\r\n    return (\r\n        <div className=\"transfer-fund card-on-feed\">\r\n            <p>Transfer coins to {contact.name}:</p>\r\n            <form onSubmit={(ev) => tranfer(ev)}>\r\n                <p className=\"amount-p\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\"\r\n                        name=\"amount\"\r\n                        min=\"1\" max={loggedInUser.coins} required\r\n                        value={amount}\r\n                        onChange={(ev) => setAmount(ev.target.value)} />\r\n                    <button type=\"submit\">Tranfer</button>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default TransferFund\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUndo, faEdit, faTrashAlt, faEnvelope, faPhone } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { loadCotnact, deleteContact, clearContact } from '../actions/ContactAction'\r\nimport { addMove, loadUser } from '../actions/UserAction'\r\n\r\nimport TransferFund from '../cmps/TransferFund'\r\nimport MovesList from '../cmps/MovesList'\r\n\r\n\r\nconst ContactDetails = (props) => {\r\n    const { contact, loggedInUser } = props\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        getContactById();\r\n\r\n    }, [props.match.params])\r\n\r\n\r\n    const getContactById = async () => {\r\n        console.log(props.match.params.id)\r\n        const id = props.match.params.id;\r\n        dispatch(loadCotnact(id));\r\n    }\r\n    const onTransferCoins = async (amount) => {\r\n        dispatch(addMove(contact, amount));\r\n        dispatch(loadUser());\r\n    }\r\n    const deleteClickHandler = async () => {\r\n        props.history.go(-1);\r\n        dispatch(deleteContact(contact._id))\r\n    }\r\n\r\n    const onGoBackClickHandler = (ev) => {\r\n        props.history.go(-1);\r\n    }\r\n\r\n    if (!loggedInUser) return <div>Please login first</div>\r\n    if (!contact) {\r\n        return <div>Loading... </div>;\r\n    } else {\r\n        return (\r\n            <div className=\"contact-details page\">\r\n                <section className=\"contact-section\">\r\n                    <div className=\"user-img-wrapper card-on-feed\">\r\n                        <img className=\"contact-img\" src={`https://robohash.org/${contact.name}.png`} alt=\"\" />\r\n                        <h1>{contact.name}</h1>\r\n                        <section className=\"btns-sec\">\r\n                            <button title=\"Return\" className=\"buttons\" onClick={onGoBackClickHandler}><FontAwesomeIcon icon={faUndo} /></button>\r\n                            <button title=\"Details\" className=\"buttons\">\r\n                                <Link to={`/Contact/Edit/${contact._id}`}><FontAwesomeIcon icon={faEdit} /></Link>\r\n                            </button>\r\n                            <button title=\"Remove\" className=\"buttons\" onClick={deleteClickHandler}><FontAwesomeIcon icon={faTrashAlt} /></button>\r\n                        </section>\r\n                    </div>\r\n                    <section className=\"info-section card-on-feed\">\r\n                        <p><span><FontAwesomeIcon icon={faEnvelope} /></span>{contact.email}</p>\r\n                        <p><span><FontAwesomeIcon icon={faPhone} /></span>{contact.phone}</p>\r\n                    </section>\r\n                </section>\r\n\r\n                <section className=\"feed-section\">\r\n                    {loggedInUser && <TransferFund contact={contact} loggedInUser={loggedInUser} onTransferCoins={onTransferCoins} />}\r\n                    {loggedInUser && <MovesList moves={loggedInUser.moves.filter(move => move.to === contact._id)} />}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    // console.log('state in ContactDetails:', state.user.loggedInUser)\r\n    return {\r\n        contact: state.contact.contact,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCotnact,\r\n    deleteContact,\r\n    clearContact,\r\n    addMove\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactDetails)\r\n","import React from 'react';\r\nimport { Chart as GoogleChart } from \"react-google-charts\";\r\n\r\n\r\n\r\nconst Chart = (props) => {\r\n\r\n    const { dataToChart } = props\r\n    return (\r\n        <section className=\"chart-cmp\">\r\n            <GoogleChart\r\n                max-width={'fit-contant'}\r\n                height={'400px'}\r\n                chartType=\"Line\"\r\n                // loader={<div>Loading Chart</div>}\r\n                data={dataToChart.values}\r\n                options={{\r\n                    chart: {\r\n                        title: dataToChart.name,\r\n                        subtitle: dataToChart.description,\r\n                    },\r\n                    colors: [\"#1b78f2\"],\r\n                    hAxis: {\r\n                        title: dataToChart.period,\r\n                    },\r\n                    vAxis: {\r\n                        title: dataToChart.unit,\r\n                    },\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport BitcoinService from '../services/bitcoin.service'\r\nimport Chart from '../cmps/Chart'\r\n\r\nconst StatisticPage = () => {\r\n    const [marketPrice, setMarketPrice] = useState(null)\r\n    const [confirmedTransactions, setConfirmedTransactions] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getMarketPrive();\r\n        getConfirmedTransactions();\r\n    }, [])\r\n    const getMarketPrive = async () => {\r\n        const marketPrice = await BitcoinService.getStatisticsValues('Market Price');\r\n        setMarketPrice(marketPrice)\r\n    }\r\n\r\n    const getConfirmedTransactions = async () => {\r\n        const confirmedTransactions = await BitcoinService.getStatisticsValues('Exchange Trade Volume ');\r\n        setConfirmedTransactions(confirmedTransactions)\r\n    }\r\n\r\n\r\n    if (!marketPrice) {\r\n        return <div>no price</div>\r\n    }\r\n    if (!confirmedTransactions) {\r\n        return <div>no confirmed Transactions</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h1>Statistic</h1>\r\n            <Chart dataToChart={marketPrice}></Chart>\r\n            <Chart dataToChart={confirmedTransactions}></Chart>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default StatisticPage\r\n","import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadCotnact, saveContact } from '../actions/ContactAction';\r\n\r\nclass ContactEditPage extends PureComponent {\r\n    state = {\r\n        contact: {\r\n            _id: '',\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const id = this.props.match.params.id;\r\n        if (id) {\r\n            await this.props.loadCotnact(id)\r\n            this.setState({ contact: { ...this.props.contact } })\r\n            // const currContact = await ContactService.getContactById(id);\r\n            // console.log(this.props.contact)\r\n        }\r\n\r\n    }\r\n\r\n    saveContact = async (ev) => {\r\n        ev.preventDefault();\r\n        await this.props.saveContact(this.state.contact)\r\n        // const contact = await this.props.saveContact(this.state.contact)\r\n        // const contact = await ContactService.saveContact(this.state.contact);\r\n        // console.log('contact', contact);\r\n        this.props.history.go(-1);\r\n\r\n    }\r\n    handleChange = (ev) => {\r\n\r\n        const { name, value } = ev.target;\r\n        this.setState((prevState) => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [name]: value\r\n                },\r\n            };\r\n        });\r\n    }\r\n    render() {\r\n        const { contact } = this.state;\r\n        return (\r\n            <div className=\"page\">\r\n                <h1>Add new contact</h1>\r\n                <form onSubmit={this.saveContact}>\r\n                    <label>Enter a contact name: </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Contact Name\"\r\n                        name=\"name\"\r\n                        value={contact.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <label>Enter email: </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Contact Email\"\r\n                        name=\"email\"\r\n                        value={contact.email}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <label>Enter phone number: </label>\r\n                    <input\r\n                        type=\"tel\"\r\n                        placeholder=\"Phone Number\"\r\n                        name=\"phone\"\r\n                        value={contact.phone}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button>Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.contact\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCotnact,\r\n    saveContact\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactEditPage)","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../actions/UserAction'\r\n\r\n\r\nconst SignUp = (props) => {\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const onSignUp = async (ev) => {\r\n        ev.preventDefault();\r\n        const newUser = { name: name, password: password };\r\n        await dispatch(signUp(newUser));\r\n        setName('');\r\n        setPassword('');\r\n        props.history.push('/');\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-up-page page\">\r\n            <h2>Sign up:</h2>\r\n            <form onSubmit={(ev) => onSignUp(ev)}>\r\n                <label>Name: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Eter your name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={(ev) => setName(ev.target.value)}\r\n                />\r\n                <label>Password: </label>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(ev) => setPassword(ev.target.value)}\r\n                />\r\n                <button type=\"submit\">Sign Up</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signUp\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/\">Home</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Contact\">Contacts</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Statistic\">Statistic</NavLink>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport NavBar from './NavBar'\r\n\r\nconst MainHeader = () => {\r\n\r\n    return (\r\n        <div className=\"main-header\">\r\n            <Link to={'/'}><h1 className=\"main-logo\">Mister Bitcoin</h1></Link>\r\n            <NavBar ></NavBar>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MainHeader\r\n\r\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nimport { loadUser } from './actions/UserAction';\nimport { getRate } from './actions/BitcoinAction';\n\nimport './App.css';\n\nimport HomePage from './pages/HomePage'\nimport ContactPage from './pages/ContactPage'\nimport ContactDetails from './pages/ContactDetails'\nimport StatisticPage from './pages/StatisticPage'\nimport ContactEditPage from './pages/ContactEditPage'\nimport SignUpPage from './pages/SignUp'\nimport MainHeader from './cmps/MainHeader';\n\nlibrary.add(fab)\n\nconst history = createBrowserHistory();\n\nconst App = (props) => {\n  const { loggedInUser, rate } = props;\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const getUser = () => {\n      dispatch(loadUser())\n    }\n    const loadRate = () => {\n      dispatch(getRate())\n    }\n    loadRate();\n    if (!loggedInUser) getUser();\n  }, [loggedInUser, rate])\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <MainHeader />\n        <main>\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} loggedInUser={loggedInUser} />\n            <Route path=\"/Contact\" exact component={ContactPage} loggedInUser={loggedInUser} />\n            <Route path=\"/Contact/Edit/:id?\" component={ContactEditPage} loggedInUser={loggedInUser} />\n            <Route path=\"/Contact/:id\" component={ContactDetails} loggedInUser={loggedInUser} />\n            <Route path=\"/Statistic\" component={StatisticPage} loggedInUser={loggedInUser} />\n            <Route path=\"/SignUp\" component={SignUpPage} loggedInUser={loggedInUser} />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  // console.count('calls to state in App')\n  // console.log('loggedInUser in state in App:', state.user.loggedInUser)\n  return {\n    loggedInUser: state.user.loggedInUser,\n  }\n}\nconst mapDispatchToProps = {\n  loadUser\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    msg: 'hello world',\r\n    counter: 17\r\n}\r\nexport default function AppReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'INC':\r\n            return {\r\n                ...state,\r\n                counter: state.counter + 1\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\n\r\n///initialState must be sicrony\r\nconst initialState = {\r\n    contacts: [],\r\n    contact: null\r\n}\r\nexport default function ContactReducer(state = initialState, action) {\r\n    // console.log('type', action)\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':\r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CONTACT':\r\n            return { ...state, contact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    return (contact._id === action.contact._id) ? action.contact : contact\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            };\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact._id !== action.contact._id)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {\r\n    loggedInUser: null\r\n}\r\nexport default function UserReducer(state = initialState, action) {\r\n    // console.log(\"action in reducer:\", action)\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.loggedInUser\r\n            }\r\n        case 'SET_USER_MOVES':\r\n            return {\r\n                ...state,\r\n                loggedInUser: { ...state.loggedInUser, moves: action.moves }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {\r\n    rate: null\r\n}\r\nexport default function BitcoinReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case 'SET_RATE':\r\n            return {\r\n                ...state,\r\n                rate: action.rate\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\n\r\nimport AppReducer from './reducers/AppReducer';\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport UserReducer from './reducers/UserReducer'\r\nimport BitcoinReducer from \"./reducers/BitcoinReducer\";\r\n\r\nconst store = createStore(combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer,\r\n    bitcoin: BitcoinReducer,\r\n    app: AppReducer\r\n}), applyMiddleware(thunk));\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}