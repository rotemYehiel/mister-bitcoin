{"version":3,"sources":["services/user.service.js","actions/UserAction.js","services/bitcoin.service.js","actions/BitcoinAction.js","assets/imgs/bitcoin-gif.gif","cmps/MovesList.js","pages/HomePage.js","services/contact.service.js","actions/ContactAction.js","cmps/ContactFilter.js","cmps/ContactPreview.js","cmps/ContactList.js","pages/ContactPage.js","cmps/TransferFund.js","pages/ContactDetails.js","cmps/Chart.js","pages/StatisticPage.js","pages/ContactEditPage.js","pages/SignUp.js","actions/AppAction.js","cmps/NavBar.js","cmps/MenuBtn.js","cmps/Menu.js","cmps/MainHeader.js","App.js","reportWebVitals.js","store/reducers/AppReducer.js","store/reducers/ContactReducer.js","store/reducers/UserReducer.js","store/reducers/BitcoinReducer.js","store/index.js","index.js"],"names":["USERS","loggedInUser","JSON","parse","localStorage","getItem","usersInStorage","setItem","stringify","getUser","credentials","userFound","find","user","name","password","_login","a","newUser","_createUser","push","contact","amount","coins","move","date","Date","to","_id","moves","unshift","userIdx","findIndex","currUser","splice","logOut","removeItem","signUp","addMove","_makeId","length","txt","possible","i","charAt","Math","floor","random","loadUser","userCredentials","dispatch","UserService","type","RATE_URL","MARKET_PRICE_URL","TRADS_URL","rate","axios","get","statistics","req","valuesToShow","data","values","map","value","x","y","period","description","unit","getRate","getStatisticsValues","BitcoinService","props","className","icon","faCalendarCheck","moment","format","mapDispatchToProps","connect","state","bitcoin","useState","userName","setUserName","setPassword","useDispatch","useEffect","login","ev","preventDefault","resetForm","onLogOut","src","alt","onClick","faCoins","faExchangeAlt","faChartLine","MovesList","onSubmit","placeholder","onChange","target","bitcoinGif","contacts","sort","arr","b","toLocaleLowerCase","filter","term","includes","phone","email","getContacts","filterBy","Promise","resolve","reject","contactsToReturn","getContactById","id","deleteContact","index","saveContact","c","_updateContact","_addContact","getEmptyContact","loadCotnacts","ContactService","loadCotnact","currContact","isUpdate","ContactFilter","setTerm","onFilter","onChangeHandler","ContactPreview","ContactList","setFilterBy","termToFilterBy","onFilterHandler","faPlus","TransferFund","setAmount","tranfer","onTransferCoins","min","max","required","clearContact","match","params","deleteClickHandler","history","go","title","faUndo","faEdit","faTrashAlt","faEnvelope","faPhone","style","width","Chart","dataToChart","max-width","height","chartType","loader","options","chart","subtitle","colors","hAxis","vAxis","rootProps","StatisticPage","marketPrice","setMarketPrice","confirmedTransactions","setConfirmedTransactions","getMarketPrive","getConfirmedTransactions","setContact","getContact","saveNewContact","handleChange","setName","onSignUp","toggalMenu","Navbar","activeClassName","exact","MenuBtn","isMenuOpen","useSelector","app","document","getElementById","classList","toggle","Menu","MainHeader","NavBar","library","add","fab","createBrowserHistory","path","component","HomePage","ContactPage","ContactEditPage","ContactDetails","SignUpPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","msg","counter","store","createStore","combineReducers","action","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ce1113a2.chunk.js","sourcesContent":["const USERS =\r\n    [{\r\n        \"_id\": \"5a5664024c096d04eeb13a8a\",\r\n        \"name\": \"Ochoa Hyde\",\r\n        \"password\": '1234',\r\n        \"coins\": 100,\r\n        \"moves\": []\r\n    },\r\n    {\r\n        \"_id\": \"5a3664028c093d08eeb13a8a\",\r\n        \"name\": \"rotem\",\r\n        \"password\": '1234',\r\n        \"coins\": 200,\r\n        \"moves\": []\r\n    }]\r\n\r\nconst loggedInUser = JSON.parse(localStorage.getItem('logged user'));\r\n\r\nconst usersInStorage = ((localStorage.getItem('users'))) ? JSON.parse(localStorage.getItem('users')) : _setUsers()\r\n\r\nfunction getUser(credentials) {\r\n    return (credentials) ? _login(credentials) : (loggedInUser ? loggedInUser : null)\r\n}\r\nasync function signUp(user) {\r\n    const newUser = _createUser(user);\r\n    usersInStorage.push(newUser);\r\n    localStorage.setItem('users', JSON.stringify(usersInStorage));\r\n    localStorage.setItem('logged user', JSON.stringify(newUser));\r\n    return getUser();\r\n}\r\nasync function addMove(contact, amount) {\r\n    if (loggedInUser.coins >= amount) {\r\n        loggedInUser.coins -= amount;\r\n        let move = {\r\n            date: new Date(),\r\n            amount: amount,\r\n            to: contact._id\r\n        }\r\n        if (loggedInUser.moves) {\r\n            loggedInUser.moves.unshift(move)\r\n        } else {\r\n            loggedInUser.moves = [move]\r\n        }\r\n        const userIdx = usersInStorage.findIndex(currUser => currUser.name === loggedInUser.name)\r\n        usersInStorage.splice(userIdx, 1, loggedInUser)\r\n        localStorage.setItem('users', JSON.stringify(usersInStorage));\r\n        localStorage.setItem('logged user', JSON.stringify(loggedInUser));\r\n    }\r\n    return getUser();\r\n}\r\nfunction logOut() {\r\n    localStorage.removeItem('logged user');\r\n}\r\nexport default {\r\n    getUser,\r\n    logOut,\r\n    signUp,\r\n    addMove\r\n}\r\nfunction _login(credentials) {\r\n    const userFound = usersInStorage.find(user => {\r\n        return (user.name === credentials.name && user.password === credentials.password)\r\n    })\r\n    if (userFound) localStorage.setItem('logged user', JSON.stringify(userFound));\r\n    return JSON.parse(localStorage.getItem('logged user'));\r\n}\r\nfunction _setUsers() {\r\n    localStorage.setItem('users', JSON.stringify(USERS))\r\n    return JSON.parse(localStorage.getItem('users'))\r\n}\r\n\r\nfunction _createUser(user) {\r\n    return {\r\n        \"_id\": _makeId(),\r\n        \"name\": user.name,\r\n        \"password\": user.password,\r\n        \"coins\": 100,\r\n        \"moves\": []\r\n    }\r\n}\r\nfunction _makeId(length = 10) {\r\n    let txt = ''\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (let i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\n","import UserService from '../services/user.service'\r\n\r\nexport function loadUser(userCredentials = null) {\r\n    return async dispatch => {\r\n        const loggedInUser = await UserService.getUser(userCredentials);\r\n        dispatch({ type: 'SET_USER', loggedInUser })\r\n    }\r\n\r\n}\r\nexport function logOut() {\r\n    return dispatch => {\r\n        UserService.logOut();\r\n        dispatch({ type: 'SET_USER', loggedInUser: null })\r\n    }\r\n}\r\nexport function signUp(newUser) {\r\n    return async dispatch => {\r\n        const loggedInUser = await UserService.signUp(newUser);\r\n        dispatch({ type: 'SET_USER', loggedInUser })\r\n    }\r\n}\r\nexport function addMove(contact, amount) {\r\n    return async dispatch => {\r\n        const loggedInUser = await UserService.addMove(contact, amount);\r\n        const moves = loggedInUser.moves\r\n        dispatch({ type: 'SET_USER_MOVES', moves })\r\n    }\r\n}\r\n","import axios from 'axios';\r\n// import moment from 'moment';\r\n\r\nconst RATE_URL = 'https://blockchain.info/tobtc?currency=USD&value=1';\r\nconst MARKET_PRICE_URL = 'https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true';\r\nconst TRADS_URL = 'https://api.blockchain.info/charts/trade-volume?timespan=5months&format=json&cors=true&values';\r\n\r\n\r\nasync function getRate() {\r\n    let rate;\r\n    if (localStorage.getItem('rate')) {\r\n        rate = localStorage.getItem('rate');\r\n        rate = JSON.parse(rate);\r\n    } else {\r\n        rate = await axios.get(RATE_URL);\r\n        localStorage.setItem('rate', JSON.stringify(rate));\r\n    }\r\n    return rate\r\n\r\n}\r\n\r\nasync function getStatisticsValues(type) {\r\n    let statistics;\r\n    if (localStorage.getItem(type)) {\r\n        statistics = localStorage.getItem(type);\r\n        statistics = JSON.parse(statistics);\r\n    } else {\r\n        const req = await axios.get((type === 'Market Price') ? MARKET_PRICE_URL : TRADS_URL);\r\n        const valuesToShow = req.data.values.map(value => [new Date(value.x), value.y])\r\n        valuesToShow.unshift([req.data.period, req.data.name])\r\n        statistics = {\r\n            name: req.data.name,\r\n            description: req.data.description,\r\n            period: req.data.period,\r\n            unit: req.data.unit,\r\n            values: valuesToShow\r\n            // values: marketPriceValues.data.values.map(value => [moment(value.x * 1000).format('MMM Do YYYY'), value.y])\r\n        }\r\n        localStorage.setItem(type, JSON.stringify(statistics));\r\n    }\r\n\r\n    return statistics\r\n}\r\n\r\nexport default {\r\n    getRate,\r\n    getStatisticsValues\r\n}\r\n\r\n\r\n\r\n","import BitcoinService from '../services/bitcoin.service'\r\n\r\nexport function getRate() {\r\n    return async dispatch => {\r\n        const rate = await BitcoinService.getRate();\r\n        dispatch({ type: 'SET_RATE', rate })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/bitcoin-gif.40cb03d6.gif\";","\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const { moves } = props;\r\n\r\n    return (\r\n        <div className=\"moves-list\">\r\n            {moves.length ? (<h3 className=\"card-on-feed\">Moves</h3>) : (<h3 className=\"card-on-feed\">No moves yet</h3>)}\r\n            <ul className=\"moves-list-ul\">\r\n                {moves.map(move => (\r\n                    <li key={move.date} className=\"move card-on-feed\">\r\n                        <p><span><FontAwesomeIcon icon={faCalendarCheck} /></span> {moment(move.date).format('MMMM Do YYYY, h:mm:ss a')}</p>\r\n                        <p><span><FontAwesomeIcon icon={['fab', 'bitcoin']} /></span>{move.amount} coins</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoins, faExchangeAlt, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { loadUser, logOut } from '../actions/UserAction';\r\nimport { getRate } from '../actions/BitcoinAction';\r\n\r\nimport bitcoinGif from '../assets/imgs/bitcoin-gif.gif'\r\nimport MovesList from '../cmps/MovesList'\r\n\r\nconst HomePage = (props) => {\r\n    const { loggedInUser, rate } = props;\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n    }, [loggedInUser, rate])\r\n\r\n    const login = async (ev) => {\r\n        ev.preventDefault();\r\n        const userCredentials = {\r\n            name: userName,\r\n            password: password\r\n        }\r\n        dispatch(loadUser(userCredentials));\r\n        resetForm();\r\n        dispatch(getRate());\r\n    }\r\n\r\n    const onLogOut = async (ev) => {\r\n        ev.preventDefault();\r\n        dispatch(logOut());\r\n        // props.history.push('/');\r\n    }\r\n    const resetForm = () => {\r\n        setUserName('');\r\n        setPassword('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-page page\">\r\n            {(loggedInUser && rate) ? (\r\n                <div className=\"user-logged-in\">\r\n                    <section className=\"user-section\">\r\n                        <div className=\"user-img-main-wrapper card-on-feed\">\r\n                            <img className=\"home-user-img\" src={`https://robohash.org/${loggedInUser.name}.png`} alt=\"\" />\r\n                            <h1>{loggedInUser.name}</h1>\r\n                            <button onClick={(ev) => onLogOut(ev)} className=\"log-out-btn\">Log out</button>\r\n                        </div>\r\n                        <section className=\"info-section card-on-feed\">\r\n                            <p><span><FontAwesomeIcon icon={faCoins} /></span>{loggedInUser.coins} coins</p>\r\n                            <p><span><FontAwesomeIcon icon={faExchangeAlt} /></span>number of moves: {(loggedInUser.moves) ? loggedInUser.moves.length : 0}</p>\r\n                            <p><span><FontAwesomeIcon icon={faChartLine} /></span>rate is: {rate.data}</p>\r\n                        </section>\r\n                    </section>\r\n                    {loggedInUser.moves && <div className=\"move-list-section\" ><MovesList moves={loggedInUser.moves} /></div>}\r\n                </div>\r\n            ) :\r\n                (<section className=\"sign-in-sec\">\r\n                    <h2 className=\"page-header\">Log in:</h2>\r\n                    <form onSubmit={(ev) => login(ev)}>\r\n                        <label>Name: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Eter your name\"\r\n                            name=\"userName\"\r\n                            value={userName}\r\n                            onChange={(ev) => setUserName(ev.target.value)}\r\n                        />\r\n                        <label>Password: </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={(ev) => setPassword(ev.target.value)}\r\n                        />\r\n                        <button className=\"buttons\" type=\"submit\">Go</button>\r\n                    </form>\r\n                    <h2 className=\"page-header text\">New arround?\r\n                        <span className=\"sign-up\">\r\n                            <Link to={'/SignUp'}>  Sign up now</Link>\r\n                        </span>\r\n                    </h2>\r\n                    <img className=\"bitcoin-gif\" src={bitcoinGif} alt=\"bitcoin gif\" />\r\n                </section>)\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    // console.count('calls to state in HomePage')\r\n    return {\r\n        loggedInUser: state.user.loggedInUser,\r\n        rate: state.bitcoin.rate\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUser,\r\n    logOut,\r\n    getRate\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)\r\n\r\n","const contacts = [\r\n  {\r\n    \"_id\": \"5a56640269f443a5d64b32ca\",\r\n    \"name\": \"Ochoa Hyde\",\r\n    \"email\": \"ochoahyde@renovize.com\",\r\n    \"phone\": \"+1 (968) 593-3824\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n    \"name\": \"Hallie Mclean\",\r\n    \"email\": \"halliemclean@renovize.com\",\r\n    \"phone\": \"+1 (948) 464-2888\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640252d6acddd183d319\",\r\n    \"name\": \"Parsons Norris\",\r\n    \"email\": \"parsonsnorris@renovize.com\",\r\n    \"phone\": \"+1 (958) 502-3495\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n    \"name\": \"Rachel Lowe\",\r\n    \"email\": \"rachellowe@renovize.com\",\r\n    \"phone\": \"+1 (911) 475-2312\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abce24c6bfe4699d\",\r\n    \"name\": \"Dominique Soto\",\r\n    \"email\": \"dominiquesoto@renovize.com\",\r\n    \"phone\": \"+1 (807) 551-3258\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402a6499c1d4da9220a\",\r\n    \"name\": \"Shana Pope\",\r\n    \"email\": \"shanapope@renovize.com\",\r\n    \"phone\": \"+1 (970) 527-3082\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402f90ae30e97f990db\",\r\n    \"name\": \"Faulkner Flores\",\r\n    \"email\": \"faulknerflores@renovize.com\",\r\n    \"phone\": \"+1 (952) 501-2678\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n    \"name\": \"Holder Bean\",\r\n    \"email\": \"holderbean@renovize.com\",\r\n    \"phone\": \"+1 (989) 503-2663\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402e3b846c5f6aec652\",\r\n    \"name\": \"Rosanne Shelton\",\r\n    \"email\": \"rosanneshelton@renovize.com\",\r\n    \"phone\": \"+1 (968) 454-3851\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n    \"name\": \"Pamela Nolan\",\r\n    \"email\": \"pamelanolan@renovize.com\",\r\n    \"phone\": \"+1 (986) 545-2166\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n    \"name\": \"Roy Cantu\",\r\n    \"email\": \"roycantu@renovize.com\",\r\n    \"phone\": \"+1 (929) 571-2295\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n    \"name\": \"Ollie Christian\",\r\n    \"email\": \"olliechristian@renovize.com\",\r\n    \"phone\": \"+1 (977) 419-3550\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n    \"name\": \"Nguyen Walls\",\r\n    \"email\": \"nguyenwalls@renovize.com\",\r\n    \"phone\": \"+1 (963) 471-3181\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298ab77236845b82b\",\r\n\r\n    \"name\": \"Glenna Santana\",\r\n    \"email\": \"glennasantana@renovize.com\",\r\n    \"phone\": \"+1 (860) 467-2376\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640208fba3e8ecb97305\",\r\n    \"name\": \"Malone Clark\",\r\n    \"email\": \"maloneclark@renovize.com\",\r\n    \"phone\": \"+1 (818) 565-2557\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abb3146207bc4ec5\",\r\n    \"name\": \"Floyd Rutledge\",\r\n    \"email\": \"floydrutledge@renovize.com\",\r\n    \"phone\": \"+1 (807) 597-3629\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298500fead8cb1ee5\",\r\n    \"name\": \"Grace James\",\r\n    \"email\": \"gracejames@renovize.com\",\r\n    \"phone\": \"+1 (959) 525-2529\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640243427b8f8445231e\",\r\n    \"name\": \"Tanner Gates\",\r\n    \"email\": \"tannergates@renovize.com\",\r\n    \"phone\": \"+1 (978) 591-2291\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n    \"name\": \"Lilly Conner\",\r\n    \"email\": \"lillyconner@renovize.com\",\r\n    \"phone\": \"+1 (842) 587-3812\"\r\n  }\r\n];\r\n\r\n\r\nfunction sort(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  })\r\n}\r\n\r\nfunction getContacts(filterBy = null) {\r\n  return new Promise((resolve, reject) => {\r\n    let contactsToReturn = contacts;\r\n    if (filterBy && filterBy.term) {\r\n      contactsToReturn = filter(filterBy.term)\r\n    }\r\n    resolve(sort(contactsToReturn))\r\n  })\r\n}\r\n\r\nfunction getContactById(id) {\r\n  return new Promise((resolve, reject) => {\r\n    const contact = contacts.find(contact => contact._id === id)\r\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n  })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n  return new Promise((resolve, reject) => {\r\n    const index = contacts.findIndex(contact => contact._id === id)\r\n    if (index !== -1) {\r\n      contacts.splice(index, 1)\r\n    }\r\n\r\n    resolve(contacts)\r\n  })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n  return new Promise((resolve, reject) => {\r\n    const index = contacts.findIndex(c => contact._id === c._id)\r\n    if (index !== -1) {\r\n      contacts[index] = contact\r\n    }\r\n    resolve(contact)\r\n  })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n  return new Promise((resolve, reject) => {\r\n    contact._id = _makeId()\r\n    contacts.push(contact)\r\n    resolve(contact)\r\n  })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n  return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n  return {\r\n    _id: _makeId(),\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  }\r\n}\r\n\r\nfunction filter(term) {\r\n  term = term.toLocaleLowerCase()\r\n  return contacts.filter(contact => {\r\n    return contact.name.toLocaleLowerCase().includes(term) ||\r\n      contact.phone.toLocaleLowerCase().includes(term) ||\r\n      contact.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\nexport default {\r\n  getContacts,\r\n  getContactById,\r\n  deleteContact,\r\n  saveContact,\r\n  getEmptyContact\r\n}\r\n\r\nfunction _makeId(length = 10) {\r\n  let txt = ''\r\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (let i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return txt\r\n}\r\n\r\n","import ContactService from '../services/contact.service'\r\n\r\nexport function loadCotnacts(filterBy) {\r\n    return async dispatch => {\r\n        const contacts = await ContactService.getContacts(filterBy);\r\n        dispatch({ type: 'SET_CONTACTS', contacts })\r\n    }\r\n}\r\n\r\nexport function loadCotnact(id) {\r\n    return async dispatch => {\r\n        const contact = await ContactService.getContactById(id);\r\n        dispatch({ type: 'SET_CONTACT', contact })\r\n    }\r\n}\r\n\r\nexport function saveContact(currContact) {\r\n    return async dispatch => {\r\n        let isUpdate = false;\r\n        (currContact._id) ? isUpdate = true : isUpdate = false;\r\n        const contact = await ContactService.saveContact(currContact);\r\n        if (isUpdate) {\r\n            dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        } else {\r\n            dispatch({ type: 'ADD_CONTACT', contact })\r\n        }\r\n        return contact;\r\n    }\r\n}\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        const contact = await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', contact })\r\n    }\r\n}\r\n\r\nexport function clearContact() {\r\n    return async dispatch => {\r\n        dispatch({ type: 'SET_CONTACT', contact: null })\r\n    }\r\n}","import React, { useState } from 'react';\r\n\r\nconst ContactFilter = (props) => {\r\n  const [term, setTerm] = useState('');\r\n\r\n  const onChangeHandler = (ev) => {\r\n    setTerm(ev.target.value);\r\n    props.onFilter(term);\r\n  };\r\n\r\n  return (\r\n    <form className=\"contact-filter\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search contact by name...\"\r\n        onChange={(ev) => onChangeHandler(ev)}\r\n        name=\"term\"\r\n        value={term}\r\n      />\r\n\r\n    </form>\r\n  );\r\n\r\n}\r\nexport default ContactFilter;","import React from 'react'\r\n\r\nconst ContactPreview = (props) => {\r\n    const { currContact } = props\r\n    return (\r\n        <div className=\"contact-preview\">\r\n            <img className=\"contact-img\" src={`https://robohash.org/${currContact.name}`} alt=\"\" />\r\n            <h3 className=\"contact-name\">{currContact.name}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactPreview\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ContactPreview from './ContactPreview'\r\n\r\n\r\nconst ContactList = (props) => {\r\n    const { contacts } = props\r\n    return (\r\n        <ul className=\"contact-list\">\r\n            {contacts.map((contact, index) => (\r\n                <li key={index} className=\"contact\">\r\n                    <Link to={'/Contact/' + contact._id}>\r\n                        <ContactPreview currContact={contact}></ContactPreview>\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactList","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nimport { loadCotnacts } from '../actions/ContactAction';\r\n\r\nimport ContactFilter from '../cmps/ContactFilter'\r\nimport ContactList from '../cmps/ContactList'\r\n\r\nconst ContactPage = (props) => {\r\n    const { contacts, loggedInUser } = props;\r\n    const [filterBy, setFilterBy] = useState({ term: '' })\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        getContacts();\r\n        if (!loggedInUser) dispatch(loadCotnacts());\r\n    }, [filterBy.term])\r\n\r\n    const getContacts = () => {\r\n        dispatch(loadCotnacts(filterBy))\r\n    }\r\n    const onFilterHandler = (termToFilterBy) => {\r\n        setFilterBy(termToFilterBy)\r\n        getContacts();\r\n    }\r\n\r\n\r\n    if (!contacts) {\r\n        return <h3>no contacts yet...</h3>\r\n    }\r\n    return (\r\n        <div className=\"contact-page page\">\r\n            <ContactFilter filterBy={filterBy} onFilter={(termToFilterBy) => onFilterHandler(termToFilterBy)} />\r\n            <ContactList contacts={contacts} />\r\n            <Link to={'/Contact/Edit'} className=\"add-contact-btn icon-btn\">\r\n                <span className=\"text\">Add Contact</span>\r\n                <span className=\"icon\"><FontAwesomeIcon icon={faPlus} /></span>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser,\r\n        contacts: state.contact.contacts\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCotnacts\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage)\r\n\r\n","import React, { useState } from 'react';\r\n\r\nconst TransferFund = (props) => {\r\n    const { contact, loggedInUser } = props;\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const tranfer = async (ev) => {\r\n        ev.preventDefault();\r\n        props.onTransferCoins(amount);\r\n        setAmount(0);\r\n    }\r\n\r\n    if (!contact && !loggedInUser) {\r\n        return <h3>no contact yet...</h3>\r\n    }\r\n    return (\r\n        <div className=\"transfer-fund card-on-feed\">\r\n            <p>Transfer coins to {contact.name}:</p>\r\n            <form onSubmit={(ev) => tranfer(ev)}>\r\n                <p className=\"amount-p\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\"\r\n                        name=\"amount\"\r\n                        min=\"1\" max={loggedInUser.coins} required\r\n                        value={amount}\r\n                        onChange={(ev) => setAmount(ev.target.value)} />\r\n                    <button type=\"submit\">Tranfer</button>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default TransferFund\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUndo, faEdit, faTrashAlt, faEnvelope, faPhone, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { loadCotnact, deleteContact, clearContact } from '../actions/ContactAction'\r\nimport { addMove, loadUser } from '../actions/UserAction'\r\n\r\nimport TransferFund from '../cmps/TransferFund';\r\nimport MovesList from '../cmps/MovesList';\r\n\r\nimport bitcoinGif from '../assets/imgs/bitcoin-gif.gif';\r\n\r\n\r\n\r\nconst ContactDetails = (props) => {\r\n    const { contact, loggedInUser } = props\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        getContactById();\r\n\r\n    }, [props.match.params])\r\n\r\n\r\n    const getContactById = async () => {\r\n        const id = props.match.params.id;\r\n        dispatch(loadCotnact(id));\r\n    }\r\n    const onTransferCoins = async (amount) => {\r\n        dispatch(addMove(contact, amount));\r\n    }\r\n    const deleteClickHandler = async () => {\r\n        props.history.go(-1);\r\n        dispatch(deleteContact(contact._id))\r\n    }\r\n\r\n    const onGoBackClickHandler = (ev) => {\r\n        props.history.go(-1);\r\n    }\r\n    const onGoHome = (ev) => {\r\n        props.history.go(-2);\r\n    }\r\n\r\n    if (!loggedInUser) return (<div>Please login first <button className=\"buttons\" onClick={(ev) => onGoHome(ev)}>Go Back</button></div>)\r\n    if (!contact) {\r\n        return <img style={{ width: '5vw' }} src={bitcoinGif} alt=\"bitcoin gif\" />;\r\n    } else {\r\n        return (\r\n            <div className=\"contact-details page\">\r\n                <section className=\"contact-section\">\r\n                    <div className=\"user-img-wrapper card-on-feed\">\r\n                        <img className=\"contact-img\" src={`https://robohash.org/${contact.name}.png`} alt=\"\" />\r\n                        <h1>{contact.name}</h1>\r\n                        <section className=\"btns-sec\">\r\n                            <button title=\"Return\" className=\"buttons icon-btn\" onClick={onGoBackClickHandler}><FontAwesomeIcon icon={faUndo} /></button>\r\n                            <Link title=\"Details\" type=\"button\" className=\"buttons icon-btn\" to={`/Contact/Edit/${contact._id}`}>\r\n                                <FontAwesomeIcon icon={faEdit} />\r\n                            </Link>\r\n                            <button title=\"Remove\" className=\"buttons icon-btn\" onClick={deleteClickHandler}><FontAwesomeIcon icon={faTrashAlt} /></button>\r\n                        </section>\r\n                    </div>\r\n                    <section className=\"info-section card-on-feed\">\r\n                        <p><span><FontAwesomeIcon icon={faEnvelope} /></span>{contact.email}</p>\r\n                        <p><span><FontAwesomeIcon icon={faPhone} /></span>{contact.phone}</p>\r\n                    </section>\r\n                </section>\r\n\r\n                <section className=\"feed-section\">\r\n                    {loggedInUser && <TransferFund contact={contact} loggedInUser={loggedInUser} onTransferCoins={onTransferCoins} />}\r\n                    {loggedInUser && <MovesList moves={loggedInUser.moves.filter(move => move.to === contact._id)} />}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.contact,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCotnact,\r\n    deleteContact,\r\n    clearContact,\r\n    addMove\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactDetails)\r\n","import React from 'react';\r\nimport { Chart as GoogleChart } from \"react-google-charts\";\r\n\r\nimport bitcoinGif from '../assets/imgs/bitcoin-gif.gif'\r\n\r\n\r\n\r\nconst Chart = (props) => {\r\n\r\n    const { dataToChart } = props\r\n    return (\r\n        <section className=\"chart-cmp\">\r\n            <GoogleChart\r\n                max-width={'fit-contant'}\r\n                height={'400px'}\r\n                chartType=\"Line\"\r\n                loader={<img style={{ width: '5vw' }} src={bitcoinGif} alt=\"bitcoin gif\" />}\r\n                data={dataToChart.values}\r\n                options={{\r\n                    chart: {\r\n                        title: dataToChart.name,\r\n                        subtitle: dataToChart.description,\r\n                    },\r\n                    colors: [\"#1b78f2\"],\r\n                    hAxis: {\r\n                        title: dataToChart.period,\r\n                    },\r\n                    vAxis: {\r\n                        title: dataToChart.unit,\r\n                    },\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport BitcoinService from '../services/bitcoin.service'\r\nimport Chart from '../cmps/Chart'\r\n\r\nconst StatisticPage = () => {\r\n    const [marketPrice, setMarketPrice] = useState(null)\r\n    const [confirmedTransactions, setConfirmedTransactions] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getMarketPrive();\r\n        getConfirmedTransactions();\r\n    }, [])\r\n    const getMarketPrive = async () => {\r\n        const marketPrice = await BitcoinService.getStatisticsValues('Market Price');\r\n        setMarketPrice(marketPrice)\r\n    }\r\n\r\n    const getConfirmedTransactions = async () => {\r\n        const confirmedTransactions = await BitcoinService.getStatisticsValues('Exchange Trade Volume ');\r\n        setConfirmedTransactions(confirmedTransactions)\r\n    }\r\n\r\n\r\n    if (!marketPrice) {\r\n        return <div>no price</div>\r\n    }\r\n    if (!confirmedTransactions) {\r\n        return <div>no confirmed Transactions</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h1 className=\"page-header\">Statistic</h1>\r\n            <Chart dataToChart={marketPrice}></Chart>\r\n            <Chart dataToChart={confirmedTransactions}></Chart>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default StatisticPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { loadCotnact, saveContact } from '../actions/ContactAction';\r\n\r\nconst ContactEditPage = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [contact, setContact] = useState({\r\n        _id: '',\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n\r\n    })\r\n    useEffect(() => {\r\n        const id = props.match.params.id;\r\n        const getContact = async () => {\r\n            await dispatch(loadCotnact(id))\r\n            setContact(props.contact)\r\n        }\r\n        if (id) getContact()\r\n    }, [props.match.params])\r\n\r\n    const saveNewContact = async (ev) => {\r\n        ev.preventDefault();\r\n        await dispatch(saveContact(contact))\r\n        props.history.go(-1);\r\n\r\n    }\r\n    const handleChange = (ev) => {\r\n        ev.preventDefault();\r\n        const { name, value } = ev.target;\r\n        setContact({\r\n            ...contact,\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contact-edit page\">\r\n            {contact._id ? (<h1>Edit: {contact.name}</h1>) : (<h1>Add new contact</h1>)}\r\n            <form onSubmit={(ev) => saveNewContact(ev)}>\r\n                <label>Enter a contact name: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Contact Name\"\r\n                    name=\"name\"\r\n                    value={contact.name}\r\n                    onChange={(ev) => handleChange(ev)}\r\n                />\r\n                <label>Enter email: </label>\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Contact email\"\r\n                    name=\"email\"\r\n                    value={contact.email}\r\n                    onChange={(ev) => handleChange(ev)}\r\n                />\r\n                <label>Enter phone number: </label>\r\n                <input\r\n                    type=\"tel\"\r\n                    placeholder=\"Phone number\"\r\n                    name=\"phone\"\r\n                    value={contact.phone}\r\n                    onChange={(ev) => handleChange(ev)}\r\n                />\r\n                <button>Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.contact\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCotnact,\r\n    saveContact\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactEditPage)","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../actions/UserAction'\r\n\r\n\r\nconst SignUp = (props) => {\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const onSignUp = async (ev) => {\r\n        ev.preventDefault();\r\n        const newUser = { name: name, password: password };\r\n        await dispatch(signUp(newUser));\r\n        resetForm();\r\n        props.history.push('/');\r\n    }\r\n    const resetForm = () => {\r\n        setName('');\r\n        setPassword('');\r\n    }\r\n    return (\r\n        <div className=\"sign-up-page page\">\r\n            <h2 className=\"page-header\">Sign up:</h2>\r\n            <form onSubmit={(ev) => onSignUp(ev)}>\r\n                <label>Name: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Eter your name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={(ev) => setName(ev.target.value)}\r\n                />\r\n                <label>Password: </label>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(ev) => setPassword(ev.target.value)}\r\n                />\r\n                <button type=\"submit\">Sign Up</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signUp\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n\r\n","export function toggalMenu() {\r\n    return async dispatch => {\r\n        dispatch({ type: 'TOGGAL_MENU' })\r\n    }\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { toggalMenu } from '../actions/AppAction';\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/\" onClick={() => dispatch(toggalMenu())}>Home</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Contact\" onClick={() => dispatch(toggalMenu())}>Contacts</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Statistic\" onClick={() => dispatch(toggalMenu())}>Statistic</NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { toggalMenu } from '../actions/AppAction';\r\n\r\nconst MenuBtn = () => {\r\n    const isMenuOpen = useSelector(state => state.app.isMenuOpen);\r\n    const dispatch = useDispatch()\r\n    const onClickMenu = () => {\r\n        document.getElementById(\"menu\").classList.toggle(\"change\");\r\n        dispatch(toggalMenu())\r\n    }\r\n\r\n    return (\r\n        <div className=\"menu-btn\">\r\n            <div id=\"menu-bar\">\r\n                <div id=\"menu\" onClick={() => onClickMenu()} className={isMenuOpen ? \"change\" : ''}>\r\n                    <div id=\"bar1\" className=\"bar\"></div>\r\n                    <div id=\"bar2\" className=\"bar\"></div>\r\n                    <div id=\"bar3\" className=\"bar\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuBtn;","import Navbar from './NavBar';\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className=\"menu\">\r\n            <Navbar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport NavBar from './NavBar';\r\nimport MenuBtn from './MenuBtn';\r\nimport Menu from './Menu';\r\n\r\nconst MainHeader = () => {\r\n    const isMenuOpen = useSelector(state => state.app.isMenuOpen);\r\n\r\n    return (\r\n        <div className=\"main-header\">\r\n            <MenuBtn />\r\n            <Link to={'/'} className=\"main-link\">\r\n                <h1 className=\"main-logo\">Mister Bitcoin</h1>\r\n                <h1 className=\"mobile-logo\"><FontAwesomeIcon icon={['fab', 'bitcoin']} /></h1>\r\n            </Link>\r\n            <div className=\"navbar-wrapper\">\r\n                <NavBar />\r\n            </div>\r\n            <div className={'menu-wrapper' + ' ' + (isMenuOpen ? 'menu-open' : '')}>\r\n                <Menu />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MainHeader\r\n\r\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nimport { loadUser } from './actions/UserAction';\nimport { getRate } from './actions/BitcoinAction';\n\nimport './App.css';\n\nimport HomePage from './pages/HomePage'\nimport ContactPage from './pages/ContactPage'\nimport ContactDetails from './pages/ContactDetails'\nimport StatisticPage from './pages/StatisticPage'\nimport ContactEditPage from './pages/ContactEditPage'\nimport SignUpPage from './pages/SignUp'\nimport MainHeader from './cmps/MainHeader';\n\nlibrary.add(fab)\n\nconst history = createBrowserHistory();\n\nconst App = (props) => {\n  const { loggedInUser, rate } = props;\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const getUser = () => {\n      dispatch(loadUser())\n    }\n    const loadRate = () => {\n      dispatch(getRate())\n    }\n    loadRate();\n    if (!loggedInUser) getUser();\n  }, [loggedInUser, rate])\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <MainHeader />\n        <main>\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} loggedInUser={loggedInUser} />\n            <Route path=\"/Contact\" exact component={ContactPage} loggedInUser={loggedInUser} />\n            <Route path=\"/Contact/Edit/:id?\" component={ContactEditPage} loggedInUser={loggedInUser} />\n            <Route path=\"/Contact/:id\" component={ContactDetails} loggedInUser={loggedInUser} />\n            <Route path=\"/Statistic\" component={StatisticPage} loggedInUser={loggedInUser} />\n            <Route path=\"/SignUp\" component={SignUpPage} loggedInUser={loggedInUser} />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  // console.count('calls to state in App')\n  return {\n    loggedInUser: state.user.loggedInUser,\n  }\n}\nconst mapDispatchToProps = {\n  loadUser\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    isMenuOpen: false,\r\n    msg: 'hello world',\r\n    counter: 17\r\n}\r\nexport default function AppReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'TOGGAL_MENU':\r\n            return {\r\n                ...state,\r\n                isMenuOpen: !state.isMenuOpen\r\n            }\r\n        case 'INC':\r\n            return {\r\n                ...state,\r\n                counter: state.counter + 1\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\n\r\n///initialState must be sicrony\r\nconst initialState = {\r\n    contacts: [],\r\n    contact: null\r\n}\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':\r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CONTACT':\r\n            return { ...state, contact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    return (contact._id === action.contact._id) ? action.contact : contact\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            };\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact._id !== action.contact._id)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {\r\n    loggedInUser: null\r\n}\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: (action.loggedInUser) ? action.loggedInUser : null\r\n            }\r\n        case 'SET_USER_MOVES':\r\n            return {\r\n                ...state,\r\n                loggedInUser: { ...state.loggedInUser, moves: action.moves }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {\r\n    rate: null\r\n}\r\nexport default function BitcoinReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case 'SET_RATE':\r\n            return {\r\n                ...state,\r\n                rate: action.rate\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\n\r\nimport AppReducer from './reducers/AppReducer';\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport UserReducer from './reducers/UserReducer'\r\nimport BitcoinReducer from \"./reducers/BitcoinReducer\";\r\n\r\nconst store = createStore(combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer,\r\n    bitcoin: BitcoinReducer,\r\n    app: AppReducer\r\n}), applyMiddleware(thunk));\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}