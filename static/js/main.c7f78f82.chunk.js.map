{"version":3,"sources":["services/user.service.js","actions/UserAction.js","services/bitcoin.service.js","actions/BitcoinAction.js","assets/imgs/bitcoin-gif.gif","cmps/MovesList.js","pages/HomePage.js","services/contact.service.js","actions/ContactAction.js","cmps/ContactFilter.js","cmps/ContactPreview.js","cmps/ContactList.js","pages/ContactPage.js","cmps/TransferFund.js","pages/ContactDetails.js","cmps/Chart.js","pages/StatisticPage.js","pages/ContactEditPage.js","pages/SignUp.js","actions/AppAction.js","cmps/NavBar.js","cmps/MenuBtn.js","cmps/Menu.js","cmps/MainHeader.js","App.js","reportWebVitals.js","store/reducers/AppReducer.js","store/reducers/ContactReducer.js","store/reducers/UserReducer.js","store/reducers/BitcoinReducer.js","store/index.js","index.js"],"names":["USERS","usersInStorage","localStorage","getItem","setItem","JSON","stringify","parse","getUser","credentials","user","userFound","find","name","password","_login","a","newUser","_createUser","push","logOut","removeItem","signUp","addMove","contact","amount","coins","move","date","Date","to","_id","moves","unshift","userIdx","findIndex","currUser","splice","_makeId","length","txt","possible","i","charAt","Math","floor","random","loadUser","userCredentials","dispatch","UserService","loggedInUser","type","RATE_URL","MARKET_PRICE_URL","TRADS_URL","rate","axios","get","statistics","req","valuesToShow","data","values","map","value","x","y","period","description","unit","getRate","getStatisticsValues","BitcoinService","props","className","icon","faCalendarCheck","moment","format","mapDispatchToProps","connect","state","bitcoin","useState","userName","setUserName","setPassword","useDispatch","useEffect","login","ev","preventDefault","resetForm","onLogOut","src","alt","onClick","faCoins","faExchangeAlt","faChartLine","MovesList","onSubmit","placeholder","onChange","target","bitcoinGif","contacts","sort","arr","b","toLocaleLowerCase","filter","term","includes","phone","email","getContacts","filterBy","Promise","resolve","reject","contactsToReturn","getContactById","id","deleteContact","index","saveContact","c","_updateContact","_addContact","getEmptyContact","loadCotnacts","ContactService","loadCotnact","currContact","isUpdate","ContactFilter","setTerm","onFilter","onChangeHandler","ContactPreview","ContactList","setFilterBy","termToFilterBy","onFilterHandler","faPlus","TransferFund","setAmount","tranfer","onTransferCoins","min","max","required","clearContact","match","params","deleteClickHandler","history","go","title","faUndo","faEdit","faTrashAlt","faEnvelope","faPhone","style","width","Chart","dataToChart","isMobileMode","setIsMobileMode","updateSize","currWidth","window","innerWidth","forEach","item","addEventListener","removeEventListener","height","chartType","loader","options","chart","subtitle","colors","hAxis","vAxis","rootProps","StatisticPage","marketPrice","setMarketPrice","confirmedTransactions","setConfirmedTransactions","getMarketPrive","getConfirmedTransactions","setContact","getContact","saveNewContact","handleChange","setName","onSignUp","toggalMenu","Navbar","activeClassName","exact","MenuBtn","isMenuOpen","useSelector","app","document","getElementById","classList","toggle","Menu","MainHeader","NavBar","library","add","fab","createBrowserHistory","path","component","HomePage","ContactPage","ContactEditPage","ContactDetails","SignUpPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","combineReducers","action","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"kRAAMA,EACF,CAAC,CACG,IAAO,2BACP,KAAQ,aACR,SAAY,OACZ,MAAS,IACT,MAAS,IAEb,CACI,IAAO,2BACP,KAAQ,QACR,SAAY,OACZ,MAAS,IACT,MAAS,KAGXC,GAAmBC,aAAaC,QAAQ,UAoD1CD,aAAaE,QAAQ,QAASC,KAAKC,UAAUN,IApDUK,KAAKE,MAAML,aAAaC,QAAQ,WAE3F,SAASK,EAAQC,GACb,IAAMC,EAAOL,KAAKE,MAAML,aAAaC,QAAQ,gBAC7C,OAAQM,EAwCZ,SAAgBA,GACZ,IAAME,EAAYV,EAAeW,MAAK,SAAAF,GAClC,OAAQA,EAAKG,OAASJ,EAAYI,MAAQH,EAAKI,WAAaL,EAAYK,YAExEH,GAAWT,aAAaE,QAAQ,cAAeC,KAAKC,UAAUK,IAClE,OAAON,KAAKE,MAAML,aAAaC,QAAQ,gBA7ChBY,CAAON,GAAgBC,GAAc,K,4CAEhE,WAAsBA,GAAtB,eAAAM,EAAA,6DACUC,EAAUC,EAAYR,GAC5BT,EAAekB,KAAKF,GACpBf,aAAaE,QAAQ,QAASC,KAAKC,UAAUL,IAC7CC,aAAaE,QAAQ,cAAeC,KAAKC,UAAUW,IAJvD,kBAKWT,KALX,4C,sBAgCe,OACXA,UACAY,OALJ,WACIlB,aAAamB,WAAW,gBAKxBC,O,4CACAC,QA7BJ,SAAiBC,EAASC,GACtB,IAAMf,EAAOL,KAAKE,MAAML,aAAaC,QAAQ,gBAC7C,GAAIO,EAAKgB,OAASD,EAAQ,CACtBf,EAAKgB,OAASD,EACd,IAAIE,EAAO,CACPC,KAAM,IAAIC,KACVJ,OAAQA,EACRK,GAAIN,EAAQO,KAEZrB,EAAKsB,MACLtB,EAAKsB,MAAMC,QAAQN,GAEnBjB,EAAKsB,MAAQ,CAACL,GAElB,IAAMO,EAAUjC,EAAekC,WAAU,SAAAC,GAAQ,OAAIA,EAASvB,OAASH,EAAKG,QAC5EZ,EAAeoC,OAAOH,EAAS,EAAGxB,GAClCR,aAAaE,QAAQ,QAASC,KAAKC,UAAUL,IAC7CC,aAAaE,QAAQ,cAAeC,KAAKC,UAAUI,IAGvD,OAAOF,MAuBX,SAASU,EAAYR,GACjB,MAAO,CACH,IAAO4B,IACP,KAAQ5B,EAAKG,KACb,SAAYH,EAAKI,SACjB,MAAS,IACT,MAAS,IAGjB,SAASwB,IAGL,IAH2B,IAAdC,EAAa,uDAAJ,GAClBC,EAAM,GACJC,EAAW,iEACRC,EAAI,EAAGA,EAAIH,EAAQG,IACxBF,GAAOC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAE/D,OAAOC,ECrFJ,SAASO,IAAkC,IAAzBC,EAAwB,uDAAN,KACvC,8CAAO,WAAMC,GAAN,eAAAjC,EAAA,sEACwBkC,EAAY1C,QAAQwC,GAD5C,OACGG,EADH,OAEHF,EAAS,CAAEG,KAAM,WAAYD,iBAF1B,2CAAP,sDAMG,SAAS/B,IACZ,OAAO,SAAA6B,GACHC,EAAY9B,SACZ6B,EAAS,CAAEG,KAAM,WAAYD,aAAc,QAG5C,SAAS7B,EAAOL,GACnB,8CAAO,WAAMgC,GAAN,eAAAjC,EAAA,sEACwBkC,EAAY5B,OAAOL,GAD3C,OACGkC,EADH,OAEHF,EAAS,CAAEG,KAAM,WAAYD,iBAF1B,2CAAP,sDAKG,SAAS5B,EAAQC,EAASC,GAC7B,8CAAO,WAAMwB,GAAN,iBAAAjC,EAAA,sEACwBkC,EAAY3B,QAAQC,EAASC,GADrD,OACG0B,EADH,OAEGnB,EAAQmB,EAAanB,MAC3BiB,EAAS,CAAEG,KAAM,iBAAkBpB,UAHhC,2CAAP,sD,qBCpBEqB,EAAW,qDACXC,EAAmB,yFACnBC,EAAY,gG,4CAGlB,4BAAAvC,EAAA,0DAEQd,aAAaC,QAAQ,QAF7B,gBAGQqD,EAAOtD,aAAaC,QAAQ,QAC5BqD,EAAOnD,KAAKE,MAAMiD,GAJ1B,sCAMqBC,IAAMC,IAAIL,GAN/B,OAMQG,EANR,OAOQtD,aAAaE,QAAQ,OAAQC,KAAKC,UAAUkD,IAPpD,gCASWA,GATX,6C,kEAaA,WAAmCJ,GAAnC,mBAAApC,EAAA,0DAEQd,aAAaC,QAAQiD,GAF7B,gBAGQO,EAAazD,aAAaC,QAAQiD,GAClCO,EAAatD,KAAKE,MAAMoD,GAJhC,uCAM0BF,IAAMC,IAAc,iBAATN,EAA2BE,EAAmBC,GANnF,OAMcK,EANd,QAOcC,EAAeD,EAAIE,KAAKC,OAAOC,KAAI,SAAAC,GAAK,MAAI,CAAC,IAAIpC,KAAKoC,EAAMC,GAAID,EAAME,OAC/DlC,QAAQ,CAAC2B,EAAIE,KAAKM,OAAQR,EAAIE,KAAKjD,OAChD8C,EAAa,CACT9C,KAAM+C,EAAIE,KAAKjD,KACfwD,YAAaT,EAAIE,KAAKO,YACtBD,OAAQR,EAAIE,KAAKM,OACjBE,KAAMV,EAAIE,KAAKQ,KACfP,OAAQF,GAEZ3D,aAAaE,QAAQgD,EAAM/C,KAAKC,UAAUqD,IAhBlD,iCAmBWA,GAnBX,6C,sBAsBe,OACXY,Q,2CACAC,oB,6CC1CG,SAASD,IACZ,8CAAO,WAAMtB,GAAN,eAAAjC,EAAA,sEACgByD,EAAeF,UAD/B,OACGf,EADH,OAEHP,EAAS,CAAEG,KAAM,WAAYI,SAF1B,2CAAP,sD,iCCHW,MAA0B,wC,wBCM1B,WAACkB,GAAW,IACf1C,EAAU0C,EAAV1C,MAER,OACI,sBAAK2C,UAAU,aAAf,UACK3C,EAAMO,OAAU,oBAAIoC,UAAU,eAAd,mBAA4C,oBAAIA,UAAU,eAAd,0BAC7D,oBAAIA,UAAU,gBAAd,SACK3C,EAAMgC,KAAI,SAAArC,GAAI,OACX,qBAAoBgD,UAAU,oBAA9B,UACI,8BAAG,+BAAM,cAAC,IAAD,CAAiBC,KAAMC,QAAhC,IAA4DC,IAAOnD,EAAKC,MAAMmD,OAAO,8BACrF,8BAAG,+BAAM,cAAC,IAAD,CAAiBH,KAAM,CAAC,MAAO,eAAsBjD,EAAKF,OAAnE,cAFKE,EAAKC,eCyF5BoD,EAAqB,CACvBjC,WACA3B,SACAmD,WAEWU,eAXS,SAACC,GACrB,MAAO,CACH/B,aAAc+B,EAAMxE,KAAKyC,aACzBK,KAAM0B,EAAMC,QAAQ3B,QAQYwB,EAAzBC,EA/FE,SAACP,GAAW,IACjBvB,EAAuBuB,EAAvBvB,aAAcK,EAASkB,EAATlB,KADE,EAEQ4B,mBAAS,IAFjB,mBAEjBC,EAFiB,KAEPC,EAFO,OAGQF,mBAAS,IAHjB,mBAGjBtE,EAHiB,KAGPyE,EAHO,KAIlBtC,EAAWuC,cAEjBC,qBAAU,cACP,CAACtC,EAAcK,IAElB,IAAMkC,EAAK,uCAAG,WAAOC,GAAP,SAAA3E,EAAA,sDACV2E,EAAGC,iBAKH3C,EAASF,EAJe,CACpBlC,KAAMwE,EACNvE,SAAUA,KAGd+E,IACA5C,EAASsB,KARC,2CAAH,sDAWLuB,EAAQ,uCAAG,WAAOH,GAAP,SAAA3E,EAAA,sDACb2E,EAAGC,iBACH3C,EAAS7B,KAFI,2CAAH,sDAKRyE,EAAY,WACdP,EAAY,IACZC,EAAY,KAGhB,OACI,qBAAKZ,UAAU,iBAAf,SACMxB,GAAgBK,EACd,sBAAKmB,UAAU,iBAAf,UACI,0BAASA,UAAU,eAAnB,UACI,sBAAKA,UAAU,qCAAf,UACI,qBAAKA,UAAU,gBAAgBoB,IAAG,+BAA0B5C,EAAatC,KAAvC,QAAmDmF,IAAI,KACzF,6BAAK7C,EAAatC,OAClB,wBAAQoF,QAAS,SAACN,GAAD,OAAQG,EAASH,IAAKhB,UAAU,cAAjD,wBAEJ,0BAASA,UAAU,4BAAnB,UACI,8BAAG,+BAAM,cAAC,IAAD,CAAiBC,KAAMsB,QAAmB/C,EAAazB,MAAhE,YACA,8BAAG,+BAAM,cAAC,IAAD,CAAiBkD,KAAMuB,QAAhC,oBAA2EhD,EAAanB,MAASmB,EAAanB,MAAMO,OAAS,KAC7H,8BAAG,+BAAM,cAAC,IAAD,CAAiBqC,KAAMwB,QAAhC,YAAgE5C,EAAKM,cAG5EX,EAAanB,OAAS,qBAAK2C,UAAU,oBAAf,SAAoC,cAAC0B,EAAD,CAAWrE,MAAOmB,EAAanB,aAG7F,0BAAS2C,UAAU,cAAnB,UACG,oBAAIA,UAAU,cAAd,qBACA,uBAAM2B,SAAU,SAACX,GAAD,OAAQD,EAAMC,IAA9B,UACI,2CACA,uBACIvC,KAAK,OACLmD,YAAY,iBACZ1F,KAAK,WACLoD,MAAOoB,EACPmB,SAAU,SAACb,GAAD,OAAQL,EAAYK,EAAGc,OAAOxC,UAE5C,+CACA,uBACIb,KAAK,WACLmD,YAAY,sBACZ1F,KAAK,WACLoD,MAAOnD,EACP0F,SAAU,SAACb,GAAD,OAAQJ,EAAYI,EAAGc,OAAOxC,UAE5C,wBAAQU,UAAU,UAAUvB,KAAK,SAAjC,mBAEJ,qBAAIuB,UAAU,mBAAd,yBACI,sBAAMA,UAAU,UAAhB,SACI,cAAC,IAAD,CAAM7C,GAAI,UAAV,gCAGR,qBAAK6C,UAAU,cAAcoB,IAAKW,EAAYV,IAAI,wBCxFhEW,EAAW,CACf,CACE,IAAO,2BACP,KAAQ,aACR,MAAS,yBACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,gBACR,MAAS,4BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,cACR,MAAS,0BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,aACR,MAAS,yBACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,kBACR,MAAS,8BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,cACR,MAAS,0BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,kBACR,MAAS,8BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,YACR,MAAS,wBACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,kBACR,MAAS,8BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEX,CACE,IAAO,2BAEP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,iBACR,MAAS,6BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,cACR,MAAS,0BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,qBAEX,CACE,IAAO,2BACP,KAAQ,eACR,MAAS,2BACT,MAAS,sBAKb,SAASC,EAAKC,GACZ,OAAOA,EAAID,MAAK,SAAC5F,EAAG8F,GAClB,OAAI9F,EAAEH,KAAKkG,oBAAsBD,EAAEjG,KAAKkG,qBAC9B,EAEN/F,EAAEH,KAAKkG,oBAAsBD,EAAEjG,KAAKkG,oBAC/B,EAGF,KA+DX,SAASC,EAAOC,GAEd,OADAA,EAAOA,EAAKF,oBACLJ,EAASK,QAAO,SAAAxF,GACrB,OAAOA,EAAQX,KAAKkG,oBAAoBG,SAASD,IAC/CzF,EAAQ2F,MAAMJ,oBAAoBG,SAASD,IAC3CzF,EAAQ4F,MAAML,oBAAoBG,SAASD,MAIlC,OACbI,YArEF,WAAuC,IAAlBC,EAAiB,uDAAN,KAC9B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAmBf,EACnBW,GAAYA,EAASL,OACvBS,EAAmBV,EAAOM,EAASL,OAErCO,EAAQZ,EAAKc,QAgEfC,eA5DF,SAAwBC,GACtB,OAAO,IAAIL,SAAQ,SAACC,EAASC,GAC3B,IAAMjG,EAAUmF,EAAS/F,MAAK,SAAAY,GAAO,OAAIA,EAAQO,MAAQ6F,KACzDpG,EAAUgG,EAAQhG,GAAWiG,EAAO,cAAD,OAAeG,EAAf,oBA0DrCC,cAtDF,SAAuBD,GACrB,OAAO,IAAIL,SAAQ,SAACC,EAASC,GAC3B,IAAMK,EAAQnB,EAASxE,WAAU,SAAAX,GAAO,OAAIA,EAAQO,MAAQ6F,MAC7C,IAAXE,GACFnB,EAAStE,OAAOyF,EAAO,GAGzBN,EAAQb,OAgDVoB,YA1BF,SAAqBvG,GACnB,OAAOA,EAAQO,IAnBjB,SAAwBP,GACtB,OAAO,IAAI+F,SAAQ,SAACC,EAASC,GAC3B,IAAMK,EAAQnB,EAASxE,WAAU,SAAA6F,GAAC,OAAIxG,EAAQO,MAAQiG,EAAEjG,QACzC,IAAX+F,IACFnB,EAASmB,GAAStG,GAEpBgG,EAAQhG,MAaWyG,CAAezG,GATtC,SAAqBA,GACnB,OAAO,IAAI+F,SAAQ,SAACC,EAASC,GAC3BjG,EAAQO,IAAMO,IACdqE,EAASxF,KAAKK,GACdgG,EAAQhG,MAKqC0G,CAAY1G,IA0B3D2G,gBAvBF,WACE,MAAO,CACLpG,IAAKO,IACLzB,KAAM,GACNuG,MAAO,GACPD,MAAO,MAqBX,SAAS7E,IAGP,IAH6B,IAAdC,EAAa,uDAAJ,GACpBC,EAAM,GACJC,EAAW,iEACRC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BF,GAAOC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAE7D,OAAOC,ECpNF,SAAS4F,EAAad,GACzB,8CAAO,WAAMrE,GAAN,eAAAjC,EAAA,sEACoBqH,EAAehB,YAAYC,GAD/C,OACGX,EADH,OAEH1D,EAAS,CAAEG,KAAM,eAAgBuD,aAF9B,2CAAP,sDAMG,SAAS2B,EAAYV,GACxB,8CAAO,WAAM3E,GAAN,eAAAjC,EAAA,sEACmBqH,EAAeV,eAAeC,GADjD,OACGpG,EADH,OAEHyB,EAAS,CAAEG,KAAM,cAAe5B,YAF7B,2CAAP,sDAMG,SAASuG,EAAYQ,GACxB,8CAAO,WAAMtF,GAAN,iBAAAjC,EAAA,6DACCwH,GAAW,EACKA,IAAnBD,EAAYxG,IAFV,SAGmBsG,EAAeN,YAAYQ,GAH9C,cAGG/G,EAHH,OAKCyB,EADAuF,EACS,CAAEpF,KAAM,iBAAkB5B,WAE1B,CAAE4B,KAAM,cAAe5B,YAPjC,kBASIA,GATJ,2CAAP,sDAYG,SAASqG,GAAcD,GAC1B,8CAAO,WAAM3E,GAAN,eAAAjC,EAAA,sEACmBqH,EAAeR,cAAcD,GADhD,OACGpG,EADH,OAEHyB,EAAS,CAAEG,KAAM,iBAAkB5B,YAFhC,2CAAP,sDC5BJ,IAsBeiH,GAtBO,SAAC/D,GAAW,IAAD,EACPU,mBAAS,IADF,mBACxB6B,EADwB,KAClByB,EADkB,KAQ/B,OACE,sBAAM/D,UAAU,iBAAhB,SACE,uBACEvB,KAAK,OACLmD,YAAY,4BACZC,SAAU,SAACb,GAAD,OAVQ,SAACA,GACvB+C,EAAQ/C,EAAGc,OAAOxC,OAClBS,EAAMiE,SAAS1B,GAQO2B,CAAgBjD,IAClC9E,KAAK,OACLoD,MAAOgD,OCLA4B,GAVQ,SAACnE,GAAW,IACvB6D,EAAgB7D,EAAhB6D,YACR,OACI,sBAAK5D,UAAU,kBAAf,UACI,qBAAKA,UAAU,cAAcoB,IAAG,+BAA0BwC,EAAY1H,MAAQmF,IAAI,KAClF,oBAAIrB,UAAU,eAAd,SAA8B4D,EAAY1H,WCevCiI,GAhBK,SAACpE,GAAW,IACpBiC,EAAajC,EAAbiC,SACR,OACI,oBAAIhC,UAAU,eAAd,SACKgC,EAAS3C,KAAI,SAACxC,EAASsG,GAAV,OACV,oBAAgBnD,UAAU,UAA1B,SACI,cAAC,IAAD,CAAM7C,GAAI,YAAcN,EAAQO,IAAhC,SACI,cAAC,GAAD,CAAgBwG,YAAa/G,OAF5BsG,SC2CnB9C,GAAqB,CACvBoD,gBAEWnD,gBATS,SAACC,GACrB,MAAO,CACH/B,aAAc+B,EAAMxE,KAAKyC,aACzBwD,SAAUzB,EAAM1D,QAAQmF,YAMQ3B,GAAzBC,EA5CK,SAACP,GAAW,IACpBiC,EAA2BjC,EAA3BiC,SAAUxD,EAAiBuB,EAAjBvB,aADS,EAEKiC,mBAAS,CAAE6B,KAAM,KAFtB,mBAEpBK,EAFoB,KAEVyB,EAFU,KAGrB9F,EAAWuC,cAEjBC,qBAAU,WACN4B,IACKlE,GAAcF,EAASmF,OAC7B,CAACd,EAASL,OAEb,IAAMI,EAAc,WAChBpE,EAASmF,EAAad,KAQ1B,OAAKX,EAID,sBAAKhC,UAAU,oBAAf,UACI,cAAC,GAAD,CAAe2C,SAAUA,EAAUqB,SAAU,SAACK,GAAD,OAX7B,SAACA,GACrBD,EAAYC,GACZ3B,IASqE4B,CAAgBD,MACjF,cAAC,GAAD,CAAarC,SAAUA,IACvB,eAAC,IAAD,CAAM7E,GAAI,gBAAiB6C,UAAU,2BAArC,UACI,sBAAMA,UAAU,OAAhB,yBACA,sBAAMA,UAAU,OAAhB,SAAuB,cAAC,IAAD,CAAiBC,KAAMsE,cAR/C,uDCAAC,GA/BM,SAACzE,GAAW,IACrBlD,EAA0BkD,EAA1BlD,QAAS2B,EAAiBuB,EAAjBvB,aADW,EAEAiC,mBAAS,GAFT,mBAErB3D,EAFqB,KAEb2H,EAFa,KAItBC,EAAO,uCAAG,WAAO1D,GAAP,SAAA3E,EAAA,sDACZ2E,EAAGC,iBACHlB,EAAM4E,gBAAgB7H,GACtB2H,EAAU,GAHE,2CAAH,sDAMb,OAAK5H,GAAY2B,EAIb,sBAAKwB,UAAU,6BAAf,UACI,mDAAsBnD,EAAQX,KAA9B,OACA,sBAAMyF,SAAU,SAACX,GAAD,OAAQ0D,EAAQ1D,IAAhC,SACI,oBAAGhB,UAAU,WAAb,UACI,2CACA,uBAAOvB,KAAK,SACRvC,KAAK,SACL0I,IAAI,IAAIC,IAAKrG,EAAazB,MAAO+H,UAAQ,EACzCxF,MAAOxC,EACP+E,SAAU,SAACb,GAAD,OAAQyD,EAAUzD,EAAGc,OAAOxC,UAC1C,wBAAQb,KAAK,SAAb,6BAbL,oDC2ET4B,GAAqB,CACvBsD,cACAT,iBACA6B,aNvDG,WACH,8CAAO,WAAMzG,GAAN,SAAAjC,EAAA,sDACHiC,EAAS,CAAEG,KAAM,cAAe5B,QAAS,OADtC,2CAAP,uDMuDAD,WAGW0D,gBAbS,SAACC,GACrB,MAAO,CACH1D,QAAS0D,EAAM1D,QAAQA,QACvB2B,aAAc+B,EAAMxE,KAAKyC,gBAUO6B,GAAzBC,EA5EQ,SAACP,GAAW,IACvBlD,EAA0BkD,EAA1BlD,QAAS2B,EAAiBuB,EAAjBvB,aACXF,EAAWuC,cAEjBC,qBAAU,WACNkC,MAED,CAACjD,EAAMiF,MAAMC,SAGhB,IAAMjC,EAAc,uCAAG,4BAAA3G,EAAA,sDACb4G,EAAKlD,EAAMiF,MAAMC,OAAOhC,GAC9B3E,EAASqF,EAAYV,IAFF,2CAAH,qDAId0B,EAAe,uCAAG,WAAO7H,GAAP,SAAAT,EAAA,sDACpBiC,EAAS1B,EAAQC,EAASC,IADN,2CAAH,sDAGfoI,EAAkB,uCAAG,sBAAA7I,EAAA,sDACvB0D,EAAMoF,QAAQC,IAAI,GAClB9G,EAAS4E,GAAcrG,EAAQO,MAFR,2CAAH,qDAYxB,OAAKoB,EACA3B,EAIG,sBAAKmD,UAAU,uBAAf,UACI,0BAASA,UAAU,kBAAnB,UACI,sBAAKA,UAAU,gCAAf,UACI,qBAAKA,UAAU,cAAcoB,IAAG,+BAA0BvE,EAAQX,KAAlC,QAA8CmF,IAAI,KAClF,6BAAKxE,EAAQX,OACb,0BAAS8D,UAAU,WAAnB,UACI,wBAAQqF,MAAM,SAASrF,UAAU,mBAAmBsB,QAlB/C,WACzBvB,EAAMoF,QAAQC,IAAI,IAiBE,SAAmF,cAAC,IAAD,CAAiBnF,KAAMqF,QAC1G,cAAC,IAAD,CAAMD,MAAM,UAAU5G,KAAK,SAASuB,UAAU,mBAAmB7C,GAAE,wBAAmBN,EAAQO,KAA9F,SACI,cAAC,IAAD,CAAiB6C,KAAMsF,QAE3B,wBAAQF,MAAM,SAASrF,UAAU,mBAAmBsB,QAAS4D,EAA7D,SAAiF,cAAC,IAAD,CAAiBjF,KAAMuF,cAGhH,0BAASxF,UAAU,4BAAnB,UACI,8BAAG,+BAAM,cAAC,IAAD,CAAiBC,KAAMwF,QAAsB5I,EAAQ4F,SAC9D,8BAAG,+BAAM,cAAC,IAAD,CAAiBxC,KAAMyF,QAAmB7I,EAAQ2F,eAInE,0BAASxC,UAAU,eAAnB,UACKxB,GAAgB,cAAC,GAAD,CAAc3B,QAASA,EAAS2B,aAAcA,EAAcmG,gBAAiBA,IAC7FnG,GAAgB,cAACkD,EAAD,CAAWrE,MAAOmB,EAAanB,MAAMgF,QAAO,SAAArF,GAAI,OAAIA,EAAKG,KAAON,EAAQO,eAxB9F,qBAAKuI,MAAO,CAAEC,MAAO,OAASxE,IAAKW,EAAYV,IAAI,gBAFnC,sDAAwB,wBAAQrB,UAAU,UAAUsB,QAAS,SAACN,GAHrFjB,EAAMoF,QAAQC,IAAI,IAG6B,2B,SCKxCS,GA/CD,SAAC9F,GAAW,IACd+F,EAAgB/F,EAAhB+F,YADa,EAEmBrF,oBAAS,GAF5B,mBAEdsF,EAFc,KAEAC,EAFA,KAIfC,EAAa,WACf,IAAMC,EAAYC,OAAOC,WACJJ,EAApBE,GAAa,MAclB,OAZApF,qBAAU,WAQN,OAPsBgF,EAAY1G,OACpBiH,SAAQ,SAACC,EAAMnD,GACX,IAAVA,IACJmD,EAAK,GAAKnG,IAAOmG,EAAK,IAAIlG,OAAO,SAEjC+F,OAAOC,YAAc,KAAKJ,GAAgB,GAC9CG,OAAOI,iBAAiB,SAAUN,GAC1B,WACJE,OAAOK,oBAAoB,SAAUP,MAE1C,CAACH,EAAaG,IAEb,yBAASjG,UAAU,YAAnB,SACI,cAAC,KAAD,CACI4F,MAAO,OACPa,OAAQ,QACRC,UAAU,OACVC,OAAQ,qBAAKhB,MAAO,CAAEC,MAAO,OAASxE,IAAKW,EAAYV,IAAI,gBAC3DlC,KAAM2G,EAAY1G,OAClBwH,QAAS,CACLC,MAAO,CACHxB,MAAOS,EAAY5J,KACnB4K,SAAUf,EAAe,GAAKD,EAAYpG,aAE9CqH,OAAQ,CAAC,WACTC,MAAO,CACH3B,MAAOS,EAAYrG,QAEvBwH,MAAO,CACH5B,MAAOS,EAAYnG,OAG3BuH,UAAW,CAAE,cAAe,UCN7BC,GApCO,WAAO,IAAD,EACc1G,mBAAS,MADvB,mBACjB2G,EADiB,KACJC,EADI,OAEkC5G,mBAAS,MAF3C,mBAEjB6G,EAFiB,KAEMC,EAFN,KAIxBzG,qBAAU,WACN0G,IACAC,MACD,IACH,IAAMD,EAAc,uCAAG,4BAAAnL,EAAA,sEACOyD,EAAeD,oBAAoB,gBAD1C,OACbuH,EADa,OAEnBC,EAAeD,GAFI,2CAAH,qDAKdK,EAAwB,uCAAG,4BAAApL,EAAA,sEACOyD,EAAeD,oBAAoB,0BAD1C,OACvByH,EADuB,OAE7BC,EAAyBD,GAFI,2CAAH,qDAM9B,OAAKF,EAGAE,EAKD,sBAAKtH,UAAU,iBAAf,UACI,oBAAIA,UAAU,cAAd,uBACA,cAAC,GAAD,CAAO8F,YAAasB,IACpB,cAAC,GAAD,CAAOtB,YAAawB,OAPjB,4DAHA,4C,iBCwDTjH,GAAqB,CACvBsD,cACAP,eAEW9C,gBATS,SAACC,GACrB,MAAO,CACH1D,QAAS0D,EAAM1D,QAAQA,WAOSwD,GAAzBC,EA/ES,SAACP,GACrB,IAAMzB,EAAWuC,cADc,EAEDJ,mBAAS,CACnCrD,IAAK,GACLlB,KAAM,GACNuG,MAAO,GACPD,MAAO,KANoB,mBAExB3F,EAFwB,KAEf6K,EAFe,KAS/B5G,qBAAU,WACN,IAAMmC,EAAKlD,EAAMiF,MAAMC,OAAOhC,GAK1BA,GAJY,uCAAG,sBAAA5G,EAAA,sEACTiC,EAASqF,EAAYV,IADZ,OAEfyE,EAAW3H,EAAMlD,SAFF,2CAAH,oDAIR8K,KACT,CAAC5H,EAAMiF,MAAMC,SAEhB,IAAM2C,EAAc,uCAAG,WAAO5G,GAAP,SAAA3E,EAAA,6DACnB2E,EAAGC,iBADgB,SAEb3C,EAAS8E,EAAYvG,IAFR,OAGnBkD,EAAMoF,QAAQC,IAAI,GAHC,2CAAH,sDAMdyC,EAAe,SAAC7G,GAClBA,EAAGC,iBADsB,MAEDD,EAAGc,OAAnB5F,EAFiB,EAEjBA,KAAMoD,EAFW,EAEXA,MACdoI,EAAW,6BACJ7K,GADG,mBAELX,EAAOoD,MAKhB,OACI,sBAAKU,UAAU,oBAAf,UACKnD,EAAQO,IAAO,qBAAI4C,UAAU,cAAd,kBAAkCnD,EAAQX,QAAe,oBAAI8D,UAAU,cAAd,6BACzE,uBAAM2B,SAAU,SAACX,GAAD,OAAQ4G,EAAe5G,IAAvC,UACI,2DACA,uBACIvC,KAAK,OACLmD,YAAY,eACZ1F,KAAK,OACLoD,MAAOzC,EAAQX,KACf2F,SAAU,SAACb,GAAD,OAAQ6G,EAAa7G,MAEnC,kDACA,uBACIvC,KAAK,QACLmD,YAAY,gBACZ1F,KAAK,QACLoD,MAAOzC,EAAQ4F,MACfZ,SAAU,SAACb,GAAD,OAAQ6G,EAAa7G,MAEnC,yDACA,uBACIvC,KAAK,MACLmD,YAAY,eACZ1F,KAAK,QACLoD,MAAOzC,EAAQ2F,MACfX,SAAU,SAACb,GAAD,OAAQ6G,EAAa7G,MAEnC,mDCdVX,GAAqB,CACvB1D,UAEW2D,gBARS,SAACC,GACrB,MAAO,CACH/B,aAAc+B,EAAMxE,KAAKyC,gBAMO6B,GAAzBC,EAlDA,SAACP,GAAW,IAAD,EACEU,mBAAS,IADX,mBACfvE,EADe,KACT4L,EADS,OAEUrH,mBAAS,IAFnB,mBAEftE,EAFe,KAELyE,EAFK,KAGhBtC,EAAWuC,cAEXkH,EAAQ,uCAAG,WAAO/G,GAAP,eAAA3E,EAAA,6DACb2E,EAAGC,iBACG3E,EAAU,CAAEJ,KAAMA,EAAMC,SAAUA,GAF3B,SAGPmC,EAAS3B,EAAOL,IAHT,OAIb4E,IACAnB,EAAMoF,QAAQ3I,KAAK,KALN,2CAAH,sDAOR0E,EAAY,WACd4G,EAAQ,IACRlH,EAAY,KAEhB,OACI,sBAAKZ,UAAU,oBAAf,UACI,oBAAIA,UAAU,cAAd,sBACA,uBAAM2B,SAAU,SAACX,GAAD,OAAQ+G,EAAS/G,IAAjC,UACI,2CACA,uBACIvC,KAAK,OACLmD,YAAY,iBACZ1F,KAAK,OACLoD,MAAOpD,EACP2F,SAAU,SAACb,GAAD,OAAQ8G,EAAQ9G,EAAGc,OAAOxC,UAExC,+CACA,uBACIb,KAAK,WACLmD,YAAY,sBACZ1F,KAAK,WACLoD,MAAOnD,EACP0F,SAAU,SAACb,GAAD,OAAQJ,EAAYI,EAAGc,OAAOxC,UAE5C,wBAAQb,KAAK,SAAb,8BC3CT,SAASuJ,KACZ,8CAAO,WAAM1J,GAAN,SAAAjC,EAAA,sDACHiC,EAAS,CAAEG,KAAM,gBADd,2CAAP,sDCKJ,IAWewJ,GAXA,WACb,IAAM3J,EAAWuC,cAEjB,OACE,sBAAKb,UAAU,SAAf,UACE,cAAC,IAAD,CAASA,UAAU,WAAWkI,gBAAgB,SAASC,OAAK,EAAChL,GAAG,IAAImE,QAAS,kBAAMhD,EAAS0J,OAA5F,kBACA,cAAC,IAAD,CAAShI,UAAU,WAAW7C,GAAG,WAAWmE,QAAS,kBAAMhD,EAAS0J,OAApE,sBACA,cAAC,IAAD,CAAShI,UAAU,WAAW7C,GAAG,aAAamE,QAAS,kBAAMhD,EAAS0J,OAAtE,2BCaSI,GArBC,WACZ,IAAMC,EAAaC,aAAY,SAAA/H,GAAK,OAAIA,EAAMgI,IAAIF,cAC5C/J,EAAWuC,cAMjB,OACI,qBAAKb,UAAU,WAAf,SACI,qBAAKiD,GAAG,WAAR,SACI,sBAAKA,GAAG,OAAO3B,QAAS,kBAPhCkH,SAASC,eAAe,QAAQC,UAAUC,OAAO,eACjDrK,EAAS0J,OAM4ChI,UAAWqI,EAAa,SAAW,GAAhF,UACI,qBAAKpF,GAAG,OAAOjD,UAAU,QACzB,qBAAKiD,GAAG,OAAOjD,UAAU,QACzB,qBAAKiD,GAAG,OAAOjD,UAAU,gBCT9B4I,GARF,WACT,OACI,qBAAK5I,UAAU,OAAf,SACI,cAAC,GAAD,OCyBG6I,GArBI,WACf,IAAMR,EAAaC,aAAY,SAAA/H,GAAK,OAAIA,EAAMgI,IAAIF,cAElD,OACI,sBAAKrI,UAAU,cAAf,UACI,cAAC,GAAD,IACA,eAAC,IAAD,CAAM7C,GAAI,IAAK6C,UAAU,YAAzB,UACI,oBAAIA,UAAU,YAAd,4BACA,oBAAIA,UAAU,cAAd,SAA4B,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,kBAE/D,qBAAKD,UAAU,iBAAf,SACI,cAAC8I,GAAD,MAEJ,qBAAK9I,UAAW,iBAAwBqI,EAAa,YAAc,IAAnE,SACI,cAAC,GAAD,UCDhBU,IAAQC,IAAIC,KAEZ,IAAM9D,GAAU+D,cAyCV7I,GAAqB,CACzBjC,YAEakC,gBATS,SAACC,GAEvB,MAAO,CACL/B,aAAc+B,EAAMxE,KAAKyC,gBAMW6B,GAAzBC,EA1CH,SAACP,GAAW,IACdvB,EAAuBuB,EAAvBvB,aAAcK,EAASkB,EAATlB,KAChBP,EAAWuC,cAajB,OAXAC,qBAAU,WAKNxC,EAASsB,KAGNpB,GANHF,EAASF,OAOV,CAACI,EAAcK,IAGhB,qBAAKmB,UAAU,MAAf,SACE,eAAC,IAAD,CAAQmF,QAASA,GAAjB,UACE,cAAC,GAAD,IACA,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgE,KAAK,IAAIhB,OAAK,EAACiB,UAAWC,EAAU7K,aAAcA,IACzD,cAAC,IAAD,CAAO2K,KAAK,WAAWhB,OAAK,EAACiB,UAAWE,GAAa9K,aAAcA,IACnE,cAAC,IAAD,CAAO2K,KAAK,qBAAqBC,UAAWG,GAAiB/K,aAAcA,IAC3E,cAAC,IAAD,CAAO2K,KAAK,eAAeC,UAAWI,GAAgBhL,aAAcA,IACpE,cAAC,IAAD,CAAO2K,KAAK,aAAaC,UAAWjC,GAAe3I,aAAcA,IACjE,cAAC,IAAD,CAAO2K,KAAK,UAAUC,UAAWK,GAAYjL,aAAcA,iBCxCxDkL,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCPRQ,GAAe,CACjB9B,YAAY,G,aCDV8B,GAAe,CACjBnI,SAAU,GACVnF,QAAS,MCFb,IAAMsN,GAAe,CACjB3L,aAAc,MCDlB,IAAM2L,GAAe,CACjBtL,KAAM,MCOV,IAQeuL,GARDC,aAAYC,aAAgB,CACtCvO,KFNW,WAAoD,IAA/BwE,EAA8B,uDAAtB4J,GAAcI,EAAQ,uCAC9D,OAAQA,EAAO9L,MACX,IAAK,WACD,OAAO,6BACA8B,GADP,IAEI/B,aAAe+L,EAAO/L,aAAgB+L,EAAO/L,aAAe,OAEpE,IAAK,iBACD,OAAO,6BACA+B,GADP,IAEI/B,aAAa,6BAAM+B,EAAM/B,cAAb,IAA2BnB,MAAOkN,EAAOlN,UAG7D,QACI,OAAOkD,IEPf1D,QHNW,WAAuD,IAA/B0D,EAA8B,uDAAtB4J,GAAcI,EAAQ,uCACjE,OAAQA,EAAO9L,MACX,IAAK,eACD,OAAO,6BAAK8B,GAAZ,IAAmByB,SAAUuI,EAAOvI,WACxC,IAAK,cACD,OAAO,6BAAKzB,GAAZ,IAAmB1D,QAAS0N,EAAO1N,UACvC,IAAK,iBACD,OAAO,6BACA0D,GADP,IAEIyB,SAAUzB,EAAMyB,SAAS3C,KAAI,SAAAxC,GACzB,OAAQA,EAAQO,MAAQmN,EAAO1N,QAAQO,IAAOmN,EAAO1N,QAAUA,OAG3E,IAAK,cACD,OAAO,6BACA0D,GADP,IAEIyB,SAAS,GAAD,oBAAMzB,EAAMyB,UAAZ,CAAsBuI,EAAO1N,YAE7C,IAAK,iBACD,OAAO,6BACA0D,GADP,IAEIyB,SAAUzB,EAAMyB,SAASK,QAAO,SAAAxF,GAAO,OAAIA,EAAQO,MAAQmN,EAAO1N,QAAQO,SAElF,QACI,OAAOmD,IGjBfC,QDRW,WAAuD,IAA/BD,EAA8B,uDAAtB4J,GAAcI,EAAQ,uCAEjE,OAAQA,EAAO9L,MACX,IAAK,WACD,OAAO,6BACA8B,GADP,IAEI1B,KAAM0L,EAAO1L,OAErB,QACI,OAAO0B,ICAfgI,IJRW,WAAmD,IAA/BhI,EAA8B,uDAAtB4J,GAAcI,EAAQ,uCAC7D,OAAQA,EAAO9L,MACX,IAAK,cACD,OAAO,6BACA8B,GADP,IAEI8H,YAAa9H,EAAM8H,aAE3B,QACI,OAAO9H,MICfiK,aAAgBC,OCHpBC,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,IAAMQ,WAAP,UACE,cAAC,GAAD,QAGJpC,SAASC,eAAe,SAM1BiB,O","file":"static/js/main.c7f78f82.chunk.js","sourcesContent":["const USERS =\r\n    [{\r\n        \"_id\": \"5a5664024c096d04eeb13a8a\",\r\n        \"name\": \"Ochoa Hyde\",\r\n        \"password\": '1234',\r\n        \"coins\": 100,\r\n        \"moves\": []\r\n    },\r\n    {\r\n        \"_id\": \"5a3664028c093d08eeb13a8a\",\r\n        \"name\": \"rotem\",\r\n        \"password\": '1234',\r\n        \"coins\": 200,\r\n        \"moves\": []\r\n    }]\r\n\r\nconst usersInStorage = ((localStorage.getItem('users'))) ? JSON.parse(localStorage.getItem('users')) : _setUsers()\r\n\r\nfunction getUser(credentials) {\r\n    const user = JSON.parse(localStorage.getItem('logged user'));\r\n    return (credentials) ? _login(credentials) : (user ? user : null)\r\n}\r\nasync function signUp(user) {\r\n    const newUser = _createUser(user);\r\n    usersInStorage.push(newUser);\r\n    localStorage.setItem('users', JSON.stringify(usersInStorage));\r\n    localStorage.setItem('logged user', JSON.stringify(newUser));\r\n    return getUser();\r\n}\r\nfunction addMove(contact, amount) {\r\n    const user = JSON.parse(localStorage.getItem('logged user'))\r\n    if (user.coins >= amount) {\r\n        user.coins -= amount;\r\n        let move = {\r\n            date: new Date(),\r\n            amount: amount,\r\n            to: contact._id\r\n        }\r\n        if (user.moves) {\r\n            user.moves.unshift(move)\r\n        } else {\r\n            user.moves = [move]\r\n        }\r\n        const userIdx = usersInStorage.findIndex(currUser => currUser.name === user.name)\r\n        usersInStorage.splice(userIdx, 1, user)\r\n        localStorage.setItem('users', JSON.stringify(usersInStorage));\r\n        localStorage.setItem('logged user', JSON.stringify(user));\r\n    }\r\n\r\n    return getUser();\r\n}\r\nfunction logOut() {\r\n    localStorage.removeItem('logged user');\r\n}\r\nexport default {\r\n    getUser,\r\n    logOut,\r\n    signUp,\r\n    addMove\r\n}\r\nfunction _login(credentials) {\r\n    const userFound = usersInStorage.find(user => {\r\n        return (user.name === credentials.name && user.password === credentials.password)\r\n    })\r\n    if (userFound) localStorage.setItem('logged user', JSON.stringify(userFound));\r\n    return JSON.parse(localStorage.getItem('logged user'));\r\n}\r\nfunction _setUsers() {\r\n    localStorage.setItem('users', JSON.stringify(USERS))\r\n    return JSON.parse(localStorage.getItem('users'))\r\n}\r\n\r\nfunction _createUser(user) {\r\n    return {\r\n        \"_id\": _makeId(),\r\n        \"name\": user.name,\r\n        \"password\": user.password,\r\n        \"coins\": 100,\r\n        \"moves\": []\r\n    }\r\n}\r\nfunction _makeId(length = 10) {\r\n    let txt = ''\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (let i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\n","import UserService from '../services/user.service'\r\n\r\nexport function loadUser(userCredentials = null) {\r\n    return async dispatch => {\r\n        const loggedInUser = await UserService.getUser(userCredentials);\r\n        dispatch({ type: 'SET_USER', loggedInUser })\r\n    }\r\n\r\n}\r\nexport function logOut() {\r\n    return dispatch => {\r\n        UserService.logOut();\r\n        dispatch({ type: 'SET_USER', loggedInUser: null })\r\n    }\r\n}\r\nexport function signUp(newUser) {\r\n    return async dispatch => {\r\n        const loggedInUser = await UserService.signUp(newUser);\r\n        dispatch({ type: 'SET_USER', loggedInUser })\r\n    }\r\n}\r\nexport function addMove(contact, amount) {\r\n    return async dispatch => {\r\n        const loggedInUser = await UserService.addMove(contact, amount);\r\n        const moves = loggedInUser.moves\r\n        dispatch({ type: 'SET_USER_MOVES', moves })\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst RATE_URL = 'https://blockchain.info/tobtc?currency=USD&value=1';\r\nconst MARKET_PRICE_URL = 'https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true';\r\nconst TRADS_URL = 'https://api.blockchain.info/charts/trade-volume?timespan=5months&format=json&cors=true&values';\r\n\r\n\r\nasync function getRate() {\r\n    let rate;\r\n    if (localStorage.getItem('rate')) {\r\n        rate = localStorage.getItem('rate');\r\n        rate = JSON.parse(rate);\r\n    } else {\r\n        rate = await axios.get(RATE_URL);\r\n        localStorage.setItem('rate', JSON.stringify(rate));\r\n    }\r\n    return rate\r\n\r\n}\r\n\r\nasync function getStatisticsValues(type) {\r\n    let statistics;\r\n    if (localStorage.getItem(type)) {\r\n        statistics = localStorage.getItem(type);\r\n        statistics = JSON.parse(statistics);\r\n    } else {\r\n        const req = await axios.get((type === 'Market Price') ? MARKET_PRICE_URL : TRADS_URL);\r\n        const valuesToShow = req.data.values.map(value => [new Date(value.x), value.y])\r\n        valuesToShow.unshift([req.data.period, req.data.name])\r\n        statistics = {\r\n            name: req.data.name,\r\n            description: req.data.description,\r\n            period: req.data.period,\r\n            unit: req.data.unit,\r\n            values: valuesToShow\r\n        }\r\n        localStorage.setItem(type, JSON.stringify(statistics));\r\n    }\r\n\r\n    return statistics\r\n}\r\n\r\nexport default {\r\n    getRate,\r\n    getStatisticsValues\r\n}\r\n\r\n\r\n\r\n","import BitcoinService from '../services/bitcoin.service'\r\n\r\nexport function getRate() {\r\n    return async dispatch => {\r\n        const rate = await BitcoinService.getRate();\r\n        dispatch({ type: 'SET_RATE', rate })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/bitcoin-gif.40cb03d6.gif\";","\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default (props) => {\r\n    const { moves } = props;\r\n\r\n    return (\r\n        <div className=\"moves-list\">\r\n            {moves.length ? (<h3 className=\"card-on-feed\">Moves</h3>) : (<h3 className=\"card-on-feed\">No moves yet</h3>)}\r\n            <ul className=\"moves-list-ul\">\r\n                {moves.map(move => (\r\n                    <li key={move.date} className=\"move card-on-feed\">\r\n                        <p><span><FontAwesomeIcon icon={faCalendarCheck} /></span> {moment(move.date).format('MMMM Do YYYY, h:mm:ss a')}</p>\r\n                        <p><span><FontAwesomeIcon icon={['fab', 'bitcoin']} /></span>{move.amount} coins</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoins, faExchangeAlt, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { loadUser, logOut } from '../actions/UserAction';\r\nimport { getRate } from '../actions/BitcoinAction';\r\n\r\nimport bitcoinGif from '../assets/imgs/bitcoin-gif.gif'\r\nimport MovesList from '../cmps/MovesList'\r\n\r\nconst HomePage = (props) => {\r\n    const { loggedInUser, rate } = props;\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n    }, [loggedInUser, rate])\r\n\r\n    const login = async (ev) => {\r\n        ev.preventDefault();\r\n        const userCredentials = {\r\n            name: userName,\r\n            password: password\r\n        }\r\n        dispatch(loadUser(userCredentials));\r\n        resetForm();\r\n        dispatch(getRate());\r\n    }\r\n\r\n    const onLogOut = async (ev) => {\r\n        ev.preventDefault();\r\n        dispatch(logOut());\r\n        // dispatch(loadUser());\r\n    }\r\n    const resetForm = () => {\r\n        setUserName('');\r\n        setPassword('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-page page\">\r\n            {(loggedInUser && rate) ? (\r\n                <div className=\"user-logged-in\">\r\n                    <section className=\"user-section\">\r\n                        <div className=\"user-img-main-wrapper card-on-feed\">\r\n                            <img className=\"home-user-img\" src={`https://robohash.org/${loggedInUser.name}.png`} alt=\"\" />\r\n                            <h1>{loggedInUser.name}</h1>\r\n                            <button onClick={(ev) => onLogOut(ev)} className=\"log-out-btn\">Log out</button>\r\n                        </div>\r\n                        <section className=\"info-section card-on-feed\">\r\n                            <p><span><FontAwesomeIcon icon={faCoins} /></span>{loggedInUser.coins} coins</p>\r\n                            <p><span><FontAwesomeIcon icon={faExchangeAlt} /></span>number of moves: {(loggedInUser.moves) ? loggedInUser.moves.length : 0}</p>\r\n                            <p><span><FontAwesomeIcon icon={faChartLine} /></span>rate is: {rate.data}</p>\r\n                        </section>\r\n                    </section>\r\n                    {loggedInUser.moves && <div className=\"move-list-section\" ><MovesList moves={loggedInUser.moves} /></div>}\r\n                </div>\r\n            ) :\r\n                (<section className=\"sign-in-sec\">\r\n                    <h2 className=\"page-header\">Log in:</h2>\r\n                    <form onSubmit={(ev) => login(ev)}>\r\n                        <label>Name: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Eter your name\"\r\n                            name=\"userName\"\r\n                            value={userName}\r\n                            onChange={(ev) => setUserName(ev.target.value)}\r\n                        />\r\n                        <label>Password: </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={(ev) => setPassword(ev.target.value)}\r\n                        />\r\n                        <button className=\"buttons\" type=\"submit\">Go</button>\r\n                    </form>\r\n                    <h2 className=\"page-header text\">New arround?\r\n                        <span className=\"sign-up\">\r\n                            <Link to={'/SignUp'}>  Sign up now</Link>\r\n                        </span>\r\n                    </h2>\r\n                    <img className=\"bitcoin-gif\" src={bitcoinGif} alt=\"bitcoin gif\" />\r\n                </section>)\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser,\r\n        rate: state.bitcoin.rate\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUser,\r\n    logOut,\r\n    getRate\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)\r\n\r\n","const contacts = [\r\n  {\r\n    \"_id\": \"5a56640269f443a5d64b32ca\",\r\n    \"name\": \"Ochoa Hyde\",\r\n    \"email\": \"ochoahyde@renovize.com\",\r\n    \"phone\": \"+1 (968) 593-3824\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n    \"name\": \"Hallie Mclean\",\r\n    \"email\": \"halliemclean@renovize.com\",\r\n    \"phone\": \"+1 (948) 464-2888\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640252d6acddd183d319\",\r\n    \"name\": \"Parsons Norris\",\r\n    \"email\": \"parsonsnorris@renovize.com\",\r\n    \"phone\": \"+1 (958) 502-3495\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n    \"name\": \"Rachel Lowe\",\r\n    \"email\": \"rachellowe@renovize.com\",\r\n    \"phone\": \"+1 (911) 475-2312\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abce24c6bfe4699d\",\r\n    \"name\": \"Dominique Soto\",\r\n    \"email\": \"dominiquesoto@renovize.com\",\r\n    \"phone\": \"+1 (807) 551-3258\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402a6499c1d4da9220a\",\r\n    \"name\": \"Shana Pope\",\r\n    \"email\": \"shanapope@renovize.com\",\r\n    \"phone\": \"+1 (970) 527-3082\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402f90ae30e97f990db\",\r\n    \"name\": \"Faulkner Flores\",\r\n    \"email\": \"faulknerflores@renovize.com\",\r\n    \"phone\": \"+1 (952) 501-2678\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n    \"name\": \"Holder Bean\",\r\n    \"email\": \"holderbean@renovize.com\",\r\n    \"phone\": \"+1 (989) 503-2663\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402e3b846c5f6aec652\",\r\n    \"name\": \"Rosanne Shelton\",\r\n    \"email\": \"rosanneshelton@renovize.com\",\r\n    \"phone\": \"+1 (968) 454-3851\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n    \"name\": \"Pamela Nolan\",\r\n    \"email\": \"pamelanolan@renovize.com\",\r\n    \"phone\": \"+1 (986) 545-2166\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n    \"name\": \"Roy Cantu\",\r\n    \"email\": \"roycantu@renovize.com\",\r\n    \"phone\": \"+1 (929) 571-2295\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n    \"name\": \"Ollie Christian\",\r\n    \"email\": \"olliechristian@renovize.com\",\r\n    \"phone\": \"+1 (977) 419-3550\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n    \"name\": \"Nguyen Walls\",\r\n    \"email\": \"nguyenwalls@renovize.com\",\r\n    \"phone\": \"+1 (963) 471-3181\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298ab77236845b82b\",\r\n\r\n    \"name\": \"Glenna Santana\",\r\n    \"email\": \"glennasantana@renovize.com\",\r\n    \"phone\": \"+1 (860) 467-2376\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640208fba3e8ecb97305\",\r\n    \"name\": \"Malone Clark\",\r\n    \"email\": \"maloneclark@renovize.com\",\r\n    \"phone\": \"+1 (818) 565-2557\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abb3146207bc4ec5\",\r\n    \"name\": \"Floyd Rutledge\",\r\n    \"email\": \"floydrutledge@renovize.com\",\r\n    \"phone\": \"+1 (807) 597-3629\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298500fead8cb1ee5\",\r\n    \"name\": \"Grace James\",\r\n    \"email\": \"gracejames@renovize.com\",\r\n    \"phone\": \"+1 (959) 525-2529\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640243427b8f8445231e\",\r\n    \"name\": \"Tanner Gates\",\r\n    \"email\": \"tannergates@renovize.com\",\r\n    \"phone\": \"+1 (978) 591-2291\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n    \"name\": \"Lilly Conner\",\r\n    \"email\": \"lillyconner@renovize.com\",\r\n    \"phone\": \"+1 (842) 587-3812\"\r\n  }\r\n];\r\n\r\n\r\nfunction sort(arr) {\r\n  return arr.sort((a, b) => {\r\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n      return -1;\r\n    }\r\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  })\r\n}\r\n\r\nfunction getContacts(filterBy = null) {\r\n  return new Promise((resolve, reject) => {\r\n    let contactsToReturn = contacts;\r\n    if (filterBy && filterBy.term) {\r\n      contactsToReturn = filter(filterBy.term)\r\n    }\r\n    resolve(sort(contactsToReturn))\r\n  })\r\n}\r\n\r\nfunction getContactById(id) {\r\n  return new Promise((resolve, reject) => {\r\n    const contact = contacts.find(contact => contact._id === id)\r\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\r\n  })\r\n}\r\n\r\nfunction deleteContact(id) {\r\n  return new Promise((resolve, reject) => {\r\n    const index = contacts.findIndex(contact => contact._id === id)\r\n    if (index !== -1) {\r\n      contacts.splice(index, 1)\r\n    }\r\n\r\n    resolve(contacts)\r\n  })\r\n}\r\n\r\nfunction _updateContact(contact) {\r\n  return new Promise((resolve, reject) => {\r\n    const index = contacts.findIndex(c => contact._id === c._id)\r\n    if (index !== -1) {\r\n      contacts[index] = contact\r\n    }\r\n    resolve(contact)\r\n  })\r\n}\r\n\r\nfunction _addContact(contact) {\r\n  return new Promise((resolve, reject) => {\r\n    contact._id = _makeId()\r\n    contacts.push(contact)\r\n    resolve(contact)\r\n  })\r\n}\r\n\r\nfunction saveContact(contact) {\r\n  return contact._id ? _updateContact(contact) : _addContact(contact)\r\n}\r\n\r\nfunction getEmptyContact() {\r\n  return {\r\n    _id: _makeId(),\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  }\r\n}\r\n\r\nfunction filter(term) {\r\n  term = term.toLocaleLowerCase()\r\n  return contacts.filter(contact => {\r\n    return contact.name.toLocaleLowerCase().includes(term) ||\r\n      contact.phone.toLocaleLowerCase().includes(term) ||\r\n      contact.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\nexport default {\r\n  getContacts,\r\n  getContactById,\r\n  deleteContact,\r\n  saveContact,\r\n  getEmptyContact\r\n}\r\n\r\nfunction _makeId(length = 10) {\r\n  let txt = ''\r\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (let i = 0; i < length; i++) {\r\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return txt\r\n}\r\n\r\n","import ContactService from '../services/contact.service'\r\n\r\nexport function loadCotnacts(filterBy) {\r\n    return async dispatch => {\r\n        const contacts = await ContactService.getContacts(filterBy);\r\n        dispatch({ type: 'SET_CONTACTS', contacts })\r\n    }\r\n}\r\n\r\nexport function loadCotnact(id) {\r\n    return async dispatch => {\r\n        const contact = await ContactService.getContactById(id);\r\n        dispatch({ type: 'SET_CONTACT', contact })\r\n    }\r\n}\r\n\r\nexport function saveContact(currContact) {\r\n    return async dispatch => {\r\n        let isUpdate = false;\r\n        (currContact._id) ? isUpdate = true : isUpdate = false;\r\n        const contact = await ContactService.saveContact(currContact);\r\n        if (isUpdate) {\r\n            dispatch({ type: 'UPDATE_CONTACT', contact })\r\n        } else {\r\n            dispatch({ type: 'ADD_CONTACT', contact })\r\n        }\r\n        return contact;\r\n    }\r\n}\r\nexport function deleteContact(id) {\r\n    return async dispatch => {\r\n        const contact = await ContactService.deleteContact(id);\r\n        dispatch({ type: 'DELETE_CONTACT', contact })\r\n    }\r\n}\r\n\r\nexport function clearContact() {\r\n    return async dispatch => {\r\n        dispatch({ type: 'SET_CONTACT', contact: null })\r\n    }\r\n}","import React, { useState } from 'react';\r\n\r\nconst ContactFilter = (props) => {\r\n  const [term, setTerm] = useState('');\r\n\r\n  const onChangeHandler = (ev) => {\r\n    setTerm(ev.target.value);\r\n    props.onFilter(term);\r\n  };\r\n\r\n  return (\r\n    <form className=\"contact-filter\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search contact by name...\"\r\n        onChange={(ev) => onChangeHandler(ev)}\r\n        name=\"term\"\r\n        value={term}\r\n      />\r\n\r\n    </form>\r\n  );\r\n\r\n}\r\nexport default ContactFilter;","import React from 'react'\r\n\r\nconst ContactPreview = (props) => {\r\n    const { currContact } = props\r\n    return (\r\n        <div className=\"contact-preview\">\r\n            <img className=\"contact-img\" src={`https://robohash.org/${currContact.name}`} alt=\"\" />\r\n            <h3 className=\"contact-name\">{currContact.name}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactPreview\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ContactPreview from './ContactPreview'\r\n\r\n\r\nconst ContactList = (props) => {\r\n    const { contacts } = props\r\n    return (\r\n        <ul className=\"contact-list\">\r\n            {contacts.map((contact, index) => (\r\n                <li key={index} className=\"contact\">\r\n                    <Link to={'/Contact/' + contact._id}>\r\n                        <ContactPreview currContact={contact}></ContactPreview>\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactList","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nimport { loadCotnacts } from '../actions/ContactAction';\r\n\r\nimport ContactFilter from '../cmps/ContactFilter'\r\nimport ContactList from '../cmps/ContactList'\r\n\r\nconst ContactPage = (props) => {\r\n    const { contacts, loggedInUser } = props;\r\n    const [filterBy, setFilterBy] = useState({ term: '' })\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        getContacts();\r\n        if (!loggedInUser) dispatch(loadCotnacts());\r\n    }, [filterBy.term])\r\n\r\n    const getContacts = () => {\r\n        dispatch(loadCotnacts(filterBy))\r\n    }\r\n    const onFilterHandler = (termToFilterBy) => {\r\n        setFilterBy(termToFilterBy)\r\n        getContacts();\r\n    }\r\n\r\n\r\n    if (!contacts) {\r\n        return <h3>no contacts yet...</h3>\r\n    }\r\n    return (\r\n        <div className=\"contact-page page\">\r\n            <ContactFilter filterBy={filterBy} onFilter={(termToFilterBy) => onFilterHandler(termToFilterBy)} />\r\n            <ContactList contacts={contacts} />\r\n            <Link to={'/Contact/Edit'} className=\"add-contact-btn icon-btn\">\r\n                <span className=\"text\">Add Contact</span>\r\n                <span className=\"icon\"><FontAwesomeIcon icon={faPlus} /></span>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser,\r\n        contacts: state.contact.contacts\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCotnacts\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPage)\r\n\r\n","import React, { useState } from 'react';\r\n\r\nconst TransferFund = (props) => {\r\n    const { contact, loggedInUser } = props;\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const tranfer = async (ev) => {\r\n        ev.preventDefault();\r\n        props.onTransferCoins(amount);\r\n        setAmount(0);\r\n    }\r\n\r\n    if (!contact && !loggedInUser) {\r\n        return <h3>no contact yet...</h3>\r\n    }\r\n    return (\r\n        <div className=\"transfer-fund card-on-feed\">\r\n            <p>Transfer coins to {contact.name}:</p>\r\n            <form onSubmit={(ev) => tranfer(ev)}>\r\n                <p className=\"amount-p\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\"\r\n                        name=\"amount\"\r\n                        min=\"1\" max={loggedInUser.coins} required\r\n                        value={amount}\r\n                        onChange={(ev) => setAmount(ev.target.value)} />\r\n                    <button type=\"submit\">Tranfer</button>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default TransferFund\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUndo, faEdit, faTrashAlt, faEnvelope, faPhone, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { loadCotnact, deleteContact, clearContact } from '../actions/ContactAction'\r\nimport { addMove } from '../actions/UserAction'\r\n\r\nimport TransferFund from '../cmps/TransferFund';\r\nimport MovesList from '../cmps/MovesList';\r\n\r\nimport bitcoinGif from '../assets/imgs/bitcoin-gif.gif';\r\n\r\n\r\n\r\nconst ContactDetails = (props) => {\r\n    const { contact, loggedInUser } = props\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        getContactById();\r\n\r\n    }, [props.match.params])\r\n\r\n\r\n    const getContactById = async () => {\r\n        const id = props.match.params.id;\r\n        dispatch(loadCotnact(id));\r\n    }\r\n    const onTransferCoins = async (amount) => {\r\n        dispatch(addMove(contact, amount));\r\n    }\r\n    const deleteClickHandler = async () => {\r\n        props.history.go(-1);\r\n        dispatch(deleteContact(contact._id))\r\n    }\r\n\r\n    const onGoBackClickHandler = () => {\r\n        props.history.go(-1);\r\n    }\r\n    const onGoHome = () => {\r\n        props.history.go(-2);\r\n    }\r\n\r\n    if (!loggedInUser) return (<div>Please login first <button className=\"buttons\" onClick={(ev) => onGoHome(ev)}>Go Back</button></div>)\r\n    if (!contact) {\r\n        return <img style={{ width: '5vw' }} src={bitcoinGif} alt=\"bitcoin gif\" />;\r\n    } else {\r\n        return (\r\n            <div className=\"contact-details page\">\r\n                <section className=\"contact-section\">\r\n                    <div className=\"user-img-wrapper card-on-feed\">\r\n                        <img className=\"contact-img\" src={`https://robohash.org/${contact.name}.png`} alt=\"\" />\r\n                        <h1>{contact.name}</h1>\r\n                        <section className=\"btns-sec\">\r\n                            <button title=\"Return\" className=\"buttons icon-btn\" onClick={onGoBackClickHandler}><FontAwesomeIcon icon={faUndo} /></button>\r\n                            <Link title=\"Details\" type=\"button\" className=\"buttons icon-btn\" to={`/Contact/Edit/${contact._id}`}>\r\n                                <FontAwesomeIcon icon={faEdit} />\r\n                            </Link>\r\n                            <button title=\"Remove\" className=\"buttons icon-btn\" onClick={deleteClickHandler}><FontAwesomeIcon icon={faTrashAlt} /></button>\r\n                        </section>\r\n                    </div>\r\n                    <section className=\"info-section card-on-feed\">\r\n                        <p><span><FontAwesomeIcon icon={faEnvelope} /></span>{contact.email}</p>\r\n                        <p><span><FontAwesomeIcon icon={faPhone} /></span>{contact.phone}</p>\r\n                    </section>\r\n                </section>\r\n\r\n                <section className=\"feed-section\">\r\n                    {loggedInUser && <TransferFund contact={contact} loggedInUser={loggedInUser} onTransferCoins={onTransferCoins} />}\r\n                    {loggedInUser && <MovesList moves={loggedInUser.moves.filter(move => move.to === contact._id)} />}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.contact,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCotnact,\r\n    deleteContact,\r\n    clearContact,\r\n    addMove\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactDetails)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Chart as GoogleChart } from \"react-google-charts\";\r\nimport moment from 'moment';\r\n\r\nimport bitcoinGif from '../assets/imgs/bitcoin-gif.gif'\r\n\r\nconst Chart = (props) => {\r\n    const { dataToChart } = props\r\n    const [isMobileMode, setIsMobileMode] = useState(false)\r\n\r\n    const updateSize = () => {\r\n        const currWidth = window.innerWidth;\r\n        (currWidth <= 538) ? setIsMobileMode(true) : setIsMobileMode(false)\r\n    }\r\n    useEffect(() => {\r\n        const dataToDisplay = dataToChart.values;\r\n        dataToDisplay.forEach((item, index) => {\r\n            if (index === 0) return\r\n            item[0] = moment(item[0]).format('L')\r\n        });\r\n        if (window.innerWidth <= 538) setIsMobileMode(true)\r\n        window.addEventListener('resize', updateSize);\r\n        return (() => {\r\n            window.removeEventListener('resize', updateSize);\r\n        })\r\n    }, [dataToChart, updateSize])\r\n    return (\r\n        <section className=\"chart-cmp\">\r\n            <GoogleChart\r\n                width={'100%'}\r\n                height={'400px'}\r\n                chartType=\"Line\"\r\n                loader={<img style={{ width: '5vw' }} src={bitcoinGif} alt=\"bitcoin gif\" />}\r\n                data={dataToChart.values}\r\n                options={{\r\n                    chart: {\r\n                        title: dataToChart.name,\r\n                        subtitle: isMobileMode ? '' : dataToChart.description,\r\n                    },\r\n                    colors: [\"#1b78f2\"],\r\n                    hAxis: {\r\n                        title: dataToChart.period,\r\n                    },\r\n                    vAxis: {\r\n                        title: dataToChart.unit,\r\n                    },\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport BitcoinService from '../services/bitcoin.service'\r\nimport Chart from '../cmps/Chart'\r\n\r\nconst StatisticPage = () => {\r\n    const [marketPrice, setMarketPrice] = useState(null)\r\n    const [confirmedTransactions, setConfirmedTransactions] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getMarketPrive();\r\n        getConfirmedTransactions();\r\n    }, [])\r\n    const getMarketPrive = async () => {\r\n        const marketPrice = await BitcoinService.getStatisticsValues('Market Price');\r\n        setMarketPrice(marketPrice)\r\n    }\r\n\r\n    const getConfirmedTransactions = async () => {\r\n        const confirmedTransactions = await BitcoinService.getStatisticsValues('Exchange Trade Volume ');\r\n        setConfirmedTransactions(confirmedTransactions)\r\n    }\r\n\r\n\r\n    if (!marketPrice) {\r\n        return <div>no price</div>\r\n    }\r\n    if (!confirmedTransactions) {\r\n        return <div>no confirmed Transactions</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"statistic page\">\r\n            <h1 className=\"page-header\">Statistic</h1>\r\n            <Chart dataToChart={marketPrice}></Chart>\r\n            <Chart dataToChart={confirmedTransactions}></Chart>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default StatisticPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadCotnact, saveContact } from '../actions/ContactAction';\r\n\r\nconst ContactEditPage = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [contact, setContact] = useState({\r\n        _id: '',\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n\r\n    })\r\n    useEffect(() => {\r\n        const id = props.match.params.id;\r\n        const getContact = async () => {\r\n            await dispatch(loadCotnact(id))\r\n            setContact(props.contact)\r\n        }\r\n        if (id) getContact()\r\n    }, [props.match.params])\r\n\r\n    const saveNewContact = async (ev) => {\r\n        ev.preventDefault();\r\n        await dispatch(saveContact(contact))\r\n        props.history.go(-1);\r\n\r\n    }\r\n    const handleChange = (ev) => {\r\n        ev.preventDefault();\r\n        const { name, value } = ev.target;\r\n        setContact({\r\n            ...contact,\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact-edit page\">\r\n            {contact._id ? (<h1 className=\"page-header\">Edit {contact.name}</h1>) : (<h1 className=\"page-header\">Add new contact</h1>)}\r\n            <form onSubmit={(ev) => saveNewContact(ev)}>\r\n                <label>Enter a contact name: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Contact Name\"\r\n                    name=\"name\"\r\n                    value={contact.name}\r\n                    onChange={(ev) => handleChange(ev)}\r\n                />\r\n                <label>Enter email: </label>\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Contact email\"\r\n                    name=\"email\"\r\n                    value={contact.email}\r\n                    onChange={(ev) => handleChange(ev)}\r\n                />\r\n                <label>Enter phone number: </label>\r\n                <input\r\n                    type=\"tel\"\r\n                    placeholder=\"Phone number\"\r\n                    name=\"phone\"\r\n                    value={contact.phone}\r\n                    onChange={(ev) => handleChange(ev)}\r\n                />\r\n                <button>Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.contact\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCotnact,\r\n    saveContact\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactEditPage)","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../actions/UserAction'\r\n\r\n\r\nconst SignUp = (props) => {\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const onSignUp = async (ev) => {\r\n        ev.preventDefault();\r\n        const newUser = { name: name, password: password };\r\n        await dispatch(signUp(newUser));\r\n        resetForm();\r\n        props.history.push('/');\r\n    }\r\n    const resetForm = () => {\r\n        setName('');\r\n        setPassword('');\r\n    }\r\n    return (\r\n        <div className=\"sign-up-page page\">\r\n            <h2 className=\"page-header\">Sign up:</h2>\r\n            <form onSubmit={(ev) => onSignUp(ev)}>\r\n                <label>Name: </label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Eter your name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={(ev) => setName(ev.target.value)}\r\n                />\r\n                <label>Password: </label>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(ev) => setPassword(ev.target.value)}\r\n                />\r\n                <button type=\"submit\">Sign Up</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signUp\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n\r\n","export function toggalMenu() {\r\n    return async dispatch => {\r\n        dispatch({ type: 'TOGGAL_MENU' })\r\n    }\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { toggalMenu } from '../actions/AppAction';\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/\" onClick={() => dispatch(toggalMenu())}>Home</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Contact\" onClick={() => dispatch(toggalMenu())}>Contacts</NavLink>\r\n      <NavLink className=\"nav-link\" to=\"/Statistic\" onClick={() => dispatch(toggalMenu())}>Statistic</NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { toggalMenu } from '../actions/AppAction';\r\n\r\nconst MenuBtn = () => {\r\n    const isMenuOpen = useSelector(state => state.app.isMenuOpen);\r\n    const dispatch = useDispatch()\r\n    const onClickMenu = () => {\r\n        document.getElementById(\"menu\").classList.toggle(\"change\");\r\n        dispatch(toggalMenu())\r\n    }\r\n\r\n    return (\r\n        <div className=\"menu-btn\">\r\n            <div id=\"menu-bar\">\r\n                <div id=\"menu\" onClick={() => onClickMenu()} className={isMenuOpen ? \"change\" : ''}>\r\n                    <div id=\"bar1\" className=\"bar\"></div>\r\n                    <div id=\"bar2\" className=\"bar\"></div>\r\n                    <div id=\"bar3\" className=\"bar\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuBtn;","import Navbar from './NavBar';\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className=\"menu\">\r\n            <Navbar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport NavBar from './NavBar';\r\nimport MenuBtn from './MenuBtn';\r\nimport Menu from './Menu';\r\n\r\nconst MainHeader = () => {\r\n    const isMenuOpen = useSelector(state => state.app.isMenuOpen);\r\n\r\n    return (\r\n        <div className=\"main-header\">\r\n            <MenuBtn />\r\n            <Link to={'/'} className=\"main-link\">\r\n                <h1 className=\"main-logo\">Mister Bitcoin</h1>\r\n                <h1 className=\"mobile-logo\"><FontAwesomeIcon icon={['fab', 'bitcoin']} /></h1>\r\n            </Link>\r\n            <div className=\"navbar-wrapper\">\r\n                <NavBar />\r\n            </div>\r\n            <div className={'menu-wrapper' + ' ' + (isMenuOpen ? 'menu-open' : '')}>\r\n                <Menu />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MainHeader\r\n\r\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nimport { loadUser } from './actions/UserAction';\nimport { getRate } from './actions/BitcoinAction';\n\nimport './App.css';\n\nimport HomePage from './pages/HomePage'\nimport ContactPage from './pages/ContactPage'\nimport ContactDetails from './pages/ContactDetails'\nimport StatisticPage from './pages/StatisticPage'\nimport ContactEditPage from './pages/ContactEditPage'\nimport SignUpPage from './pages/SignUp'\nimport MainHeader from './cmps/MainHeader';\n\nlibrary.add(fab)\n\nconst history = createBrowserHistory();\n\nconst App = (props) => {\n  const { loggedInUser, rate } = props;\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const getUser = () => {\n      dispatch(loadUser())\n    }\n    const loadRate = () => {\n      dispatch(getRate())\n    }\n    loadRate();\n    if (!loggedInUser) getUser();\n  }, [loggedInUser, rate])\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <MainHeader />\n        <main>\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} loggedInUser={loggedInUser} />\n            <Route path=\"/Contact\" exact component={ContactPage} loggedInUser={loggedInUser} />\n            <Route path=\"/Contact/Edit/:id?\" component={ContactEditPage} loggedInUser={loggedInUser} />\n            <Route path=\"/Contact/:id\" component={ContactDetails} loggedInUser={loggedInUser} />\n            <Route path=\"/Statistic\" component={StatisticPage} loggedInUser={loggedInUser} />\n            <Route path=\"/SignUp\" component={SignUpPage} loggedInUser={loggedInUser} />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  // console.count('calls to state in App')\n  return {\n    loggedInUser: state.user.loggedInUser,\n  }\n}\nconst mapDispatchToProps = {\n  loadUser\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    isMenuOpen: false,\r\n\r\n}\r\nexport default function AppReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'TOGGAL_MENU':\r\n            return {\r\n                ...state,\r\n                isMenuOpen: !state.isMenuOpen\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    contacts: [],\r\n    contact: null\r\n}\r\nexport default function ContactReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':\r\n            return { ...state, contacts: action.contacts }\r\n        case 'SET_CONTACT':\r\n            return { ...state, contact: action.contact }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    return (contact._id === action.contact._id) ? action.contact : contact\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            };\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact._id !== action.contact._id)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {\r\n    loggedInUser: null\r\n}\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: (action.loggedInUser) ? action.loggedInUser : null\r\n            }\r\n        case 'SET_USER_MOVES':\r\n            return {\r\n                ...state,\r\n                loggedInUser: { ...state.loggedInUser, moves: action.moves }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {\r\n    rate: null\r\n}\r\nexport default function BitcoinReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case 'SET_RATE':\r\n            return {\r\n                ...state,\r\n                rate: action.rate\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\n\r\nimport AppReducer from './reducers/AppReducer';\r\nimport ContactReducer from './reducers/ContactReducer';\r\nimport UserReducer from './reducers/UserReducer'\r\nimport BitcoinReducer from \"./reducers/BitcoinReducer\";\r\n\r\nconst store = createStore(combineReducers({\r\n    user: UserReducer,\r\n    contact: ContactReducer,\r\n    bitcoin: BitcoinReducer,\r\n    app: AppReducer\r\n}), applyMiddleware(thunk));\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}